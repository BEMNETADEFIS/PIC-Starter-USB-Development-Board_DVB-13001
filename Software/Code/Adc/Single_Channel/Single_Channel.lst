

HI-TECH Software PIC LITE Macro Assembler V9.83 build 10920 
                                                                                               Mon Dec 24 21:14:39 2012

HI-TECH Software Omniscient Code Generator (Lite mode) build 10920
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 10920"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F877A
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           	FNCALL	_main,_LCD_Init
    43                           	FNCALL	_main,_ADC_Init
    44                           	FNCALL	_main,_LCD_DisplayString
    45                           	FNCALL	_main,_ADC_StartConversion
    46                           	FNCALL	_main,_LCD_GoToLineTwo
    47                           	FNCALL	_main,_LCD_DisplayNumber
    48                           	FNCALL	_LCD_DisplayNumber,___lwdiv
    49                           	FNCALL	_LCD_DisplayNumber,_LCD_DataWrite
    50                           	FNCALL	_LCD_DisplayNumber,___lwmod
    51                           	FNCALL	_LCD_DisplayString,_LCD_DataWrite
    52                           	FNCALL	_LCD_GoToLineTwo,_LCD_CmdWrite
    53                           	FNCALL	_LCD_Init,_delay_us
    54                           	FNCALL	_LCD_Init,_LCD_CmdWrite
    55                           	FNCALL	_LCD_DataWrite,_delay_us
    56                           	FNCALL	_LCD_DataWrite,_delay_ms
    57                           	FNCALL	_LCD_CmdWrite,_delay_us
    58                           	FNCALL	_LCD_CmdWrite,_delay_ms
    59                           	FNCALL	_delay_ms,_delay_us
    60                           	FNCALL	_ADC_StartConversion,_delay_us
    61                           	FNROOT	_main
    62                           	global	_ADCON0
    63                           psect	text166,local,class=CODE,delta=2
    64                           global __ptext166
    65  0000                     __ptext166:
    66  001F                     _ADCON0	set	31
    67                           	global	_ADRESH
    68  001E                     _ADRESH	set	30
    69                           	global	_PORTB
    70  0006                     _PORTB	set	6
    71                           	global	_CARRY
    72  0018                     _CARRY	set	24
    73                           	global	_GIE
    74  005F                     _GIE	set	95
    75                           	global	_GO
    76  00FA                     _GO	set	250
    77                           	global	_RD0
    78  0040                     _RD0	set	64
    79                           	global	_RD1
    80  0041                     _RD1	set	65
    81                           	global	_RD2
    82  0042                     _RD2	set	66
    83                           	global	_ADCON1
    84  009F                     _ADCON1	set	159
    85                           	global	_ADRESL
    86  009E                     _ADRESL	set	158
    87                           	global	_TRISB
    88  0086                     _TRISB	set	134
    89                           	global	_TRISD
    90  0088                     _TRISD	set	136
    91                           	global	_EEADR
    92  010D                     _EEADR	set	269
    93                           	global	_EEDATA
    94  010C                     _EEDATA	set	268
    95                           	global	_EECON1
    96  018C                     _EECON1	set	396
    97                           	global	_EECON2
    98  018D                     _EECON2	set	397
    99                           	global	_RD
   100  0C60                     _RD	set	3168
   101                           	global	_WR
   102  0C61                     _WR	set	3169
   103                           	global	_WREN
   104  0C62                     _WREN	set	3170
   105                           	global	_ADON
   106  00F8                     _ADON	set	248
   107                           psect	strings,class=STRING,delta=2
   108                           global __pstrings
   109  0003                     __pstrings:
   110                           ;	global	stringdir,stringtab,__stringbase
   111  0003                     stringtab:
   112                           ;	String table - string pointers are 1 byte each
   113  0003                     stringcode:stringdir:
      + 0003                     stringdir:	
   114  0003  3000               movlw high(stringdir)
   115  0004  008A               movwf pclath
   116  0005  0804               movf fsr,w
   117  0006  0A84               incf fsr
   118  0007  0782               	addwf pc
   119  0008                     __stringbase:
   120  0008  3400               	retlw	0
   121                           psect	strings
   122                           	
   123  0009                     STR_1:	
   124  0009  3441               	retlw	65	;'A'
   125  000A  3444               	retlw	68	;'D'
   126  000B  3443               	retlw	67	;'C'
   127  000C  3420               	retlw	32	;' '
   128  000D  3443               	retlw	67	;'C'
   129  000E  3468               	retlw	104	;'h'
   130  000F  3461               	retlw	97	;'a'
   131  0010  346E               	retlw	110	;'n'
   132  0011  346E               	retlw	110	;'n'
   133  0012  3465               	retlw	101	;'e'
   134  0013  346C               	retlw	108	;'l'
   135  0014  3420               	retlw	32	;' '
   136  0015  347A               	retlw	122	;'z'
   137  0016  3465               	retlw	101	;'e'
   138  0017  3472               	retlw	114	;'r'
   139  0018  346F               	retlw	111	;'o'
   140  0019  3400               	retlw	0
   141                           psect	strings
   142                           	file	"Single_Channel.as"
   143                           	line	#
   144                           psect cinit,class=CODE,delta=2
   145                           global start_initialization
   146  0591                     start_initialization:
   147                           
   148                           psect cinit,class=CODE,delta=2
   149                           global end_of_initialization
   150                           
   151                           ;End of C runtime variable initialization code
   152                           
   153  0591                     end_of_initialization:
   154  0591  0183               clrf status
   155  0592  120A  118A  2E50   ljmp _main	;jump to C main() function
   156                           psect	cstackCOMMON,class=COMMON,space=1
   157                           global __pcstackCOMMON
   158  0070                     __pcstackCOMMON:
   159                           	global	?_delay_us
   160  0070                     ?_delay_us:	; 0 bytes @ 0x0
   161                           	global	?_LCD_CmdWrite
   162  0070                     ?_LCD_CmdWrite:	; 0 bytes @ 0x0
   163                           	global	?_ADC_Init
   164  0070                     ?_ADC_Init:	; 0 bytes @ 0x0
   165                           	global	??_ADC_Init
   166  0070                     ??_ADC_Init:	; 0 bytes @ 0x0
   167                           	global	?_LCD_Init
   168  0070                     ?_LCD_Init:	; 0 bytes @ 0x0
   169                           	global	?_LCD_GoToLineTwo
   170  0070                     ?_LCD_GoToLineTwo:	; 0 bytes @ 0x0
   171                           	global	?_LCD_DataWrite
   172  0070                     ?_LCD_DataWrite:	; 0 bytes @ 0x0
   173                           	global	?_LCD_DisplayString
   174  0070                     ?_LCD_DisplayString:	; 0 bytes @ 0x0
   175                           	global	?_main
   176  0070                     ?_main:	; 0 bytes @ 0x0
   177                           	global	?___lwdiv
   178  0070                     ?___lwdiv:	; 2 bytes @ 0x0
   179                           	global	?___lwmod
   180  0070                     ?___lwmod:	; 2 bytes @ 0x0
   181                           	global	delay_us@us_count
   182  0070                     delay_us@us_count:	; 2 bytes @ 0x0
   183                           	global	___lwdiv@divisor
   184  0070                     ___lwdiv@divisor:	; 2 bytes @ 0x0
   185                           	global	___lwmod@divisor
   186  0070                     ___lwmod@divisor:	; 2 bytes @ 0x0
   187  0070                     	ds	2
   188                           	global	??_delay_us
   189  0072                     ??_delay_us:	; 0 bytes @ 0x2
   190                           	global	?_delay_ms
   191  0072                     ?_delay_ms:	; 0 bytes @ 0x2
   192                           	global	?_ADC_StartConversion
   193  0072                     ?_ADC_StartConversion:	; 2 bytes @ 0x2
   194                           	global	delay_ms@ms_count
   195  0072                     delay_ms@ms_count:	; 2 bytes @ 0x2
   196                           	global	___lwdiv@dividend
   197  0072                     ___lwdiv@dividend:	; 2 bytes @ 0x2
   198                           	global	___lwmod@dividend
   199  0072                     ___lwmod@dividend:	; 2 bytes @ 0x2
   200  0072                     	ds	2
   201                           	global	??_LCD_CmdWrite
   202  0074                     ??_LCD_CmdWrite:	; 0 bytes @ 0x4
   203                           	global	??_ADC_StartConversion
   204  0074                     ??_ADC_StartConversion:	; 0 bytes @ 0x4
   205                           	global	??_delay_ms
   206  0074                     ??_delay_ms:	; 0 bytes @ 0x4
   207                           	global	??_LCD_DataWrite
   208  0074                     ??_LCD_DataWrite:	; 0 bytes @ 0x4
   209                           	global	??___lwdiv
   210  0074                     ??___lwdiv:	; 0 bytes @ 0x4
   211                           	global	??___lwmod
   212  0074                     ??___lwmod:	; 0 bytes @ 0x4
   213                           	global	LCD_CmdWrite@cmd
   214  0074                     LCD_CmdWrite@cmd:	; 1 bytes @ 0x4
   215                           	global	LCD_DataWrite@dat
   216  0074                     LCD_DataWrite@dat:	; 1 bytes @ 0x4
   217  0074                     	ds	1
   218                           	global	??_LCD_Init
   219  0075                     ??_LCD_Init:	; 0 bytes @ 0x5
   220                           	global	??_LCD_GoToLineTwo
   221  0075                     ??_LCD_GoToLineTwo:	; 0 bytes @ 0x5
   222                           	global	??_LCD_DisplayString
   223  0075                     ??_LCD_DisplayString:	; 0 bytes @ 0x5
   224                           	global	___lwmod@counter
   225  0075                     ___lwmod@counter:	; 1 bytes @ 0x5
   226                           	global	___lwdiv@quotient
   227  0075                     ___lwdiv@quotient:	; 2 bytes @ 0x5
   228  0075                     	ds	1
   229                           	global	ADC_StartConversion@channel
   230  0076                     ADC_StartConversion@channel:	; 1 bytes @ 0x6
   231                           	global	LCD_DisplayString@string_ptr
   232  0076                     LCD_DisplayString@string_ptr:	; 1 bytes @ 0x6
   233  0076                     	ds	1
   234                           	global	___lwdiv@counter
   235  0077                     ___lwdiv@counter:	; 1 bytes @ 0x7
   236  0077                     	ds	1
   237                           	global	?_LCD_DisplayNumber
   238  0078                     ?_LCD_DisplayNumber:	; 0 bytes @ 0x8
   239                           	global	LCD_DisplayNumber@num
   240  0078                     LCD_DisplayNumber@num:	; 2 bytes @ 0x8
   241  0078                     	ds	2
   242                           	global	??_LCD_DisplayNumber
   243  007A                     ??_LCD_DisplayNumber:	; 0 bytes @ 0xA
   244                           	global	??_main
   245  007A                     ??_main:	; 0 bytes @ 0xA
   246                           	global	main@adc_result
   247  007A                     main@adc_result:	; 2 bytes @ 0xA
   248  007A                     	ds	2
   249 ;;Data sizes: Strings 17, constant 0, data 0, bss 0, persistent 0 stack 0
   250 ;;Auto spaces:   Size  Autos    Used
   251 ;; COMMON          14     12      12
   252 ;; BANK0           80      0       0
   253 ;; BANK1           80      0       0
   254 ;; BANK3           96      0       0
   255 ;; BANK2           96      0       0
   256                           
   257 ;;
   258 ;; Pointer list with targets:
   259                           
   260 ;; ?___lwmod	unsigned int  size(1) Largest target is 0
   261 ;;
   262 ;; ?___lwdiv	unsigned int  size(1) Largest target is 0
   263 ;;
   264 ;; ?_ADC_StartConversion	unsigned int  size(1) Largest target is 0
   265 ;;
   266 ;; LCD_DisplayString@string_ptr	PTR unsigned char  size(1) Largest target is 17
   267 ;;		 -> STR_1(CODE[17]), 
   268 ;;
   269                           
   270                           
   271 ;;
   272 ;; Critical Paths under _main in COMMON
   273 ;;
   274 ;;   _main->_LCD_DisplayNumber
   275 ;;   _LCD_DisplayNumber->___lwdiv
   276 ;;   _LCD_DisplayString->_LCD_DataWrite
   277 ;;   _LCD_GoToLineTwo->_LCD_CmdWrite
   278 ;;   _LCD_Init->_LCD_CmdWrite
   279 ;;   _LCD_DataWrite->_delay_ms
   280 ;;   _LCD_CmdWrite->_delay_ms
   281 ;;   _delay_ms->_delay_us
   282 ;;   _ADC_StartConversion->_delay_us
   283 ;;
   284 ;; Critical Paths under _main in BANK0
   285 ;;
   286 ;;   None.
   287 ;;
   288 ;; Critical Paths under _main in BANK1
   289 ;;
   290 ;;   None.
   291 ;;
   292 ;; Critical Paths under _main in BANK3
   293 ;;
   294 ;;   None.
   295 ;;
   296 ;; Critical Paths under _main in BANK2
   297 ;;
   298 ;;   None.
   299                           
   300 ;;
   301 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   302 ;;
   303                           
   304 ;;
   305 ;;Call Graph Tables:
   306 ;;
   307 ;; ---------------------------------------------------------------------------------
   308 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   309 ;; ---------------------------------------------------------------------------------
   310 ;; (0) _main                                                 2     2      0     660
   311 ;;                                             10 COMMON     2     2      0
   312 ;;                           _LCD_Init
   313 ;;                           _ADC_Init
   314 ;;                  _LCD_DisplayString
   315 ;;                _ADC_StartConversion
   316 ;;                    _LCD_GoToLineTwo
   317 ;;                  _LCD_DisplayNumber
   318 ;; ---------------------------------------------------------------------------------
   319 ;; (1) _LCD_DisplayNumber                                    2     0      2     390
   320 ;;                                              8 COMMON     2     0      2
   321 ;;                            ___lwdiv
   322 ;;                      _LCD_DataWrite
   323 ;;                            ___lwmod
   324 ;; ---------------------------------------------------------------------------------
   325 ;; (1) _LCD_DisplayString                                    2     2      0      90
   326 ;;                                              5 COMMON     2     2      0
   327 ;;                      _LCD_DataWrite
   328 ;; ---------------------------------------------------------------------------------
   329 ;; (1) _LCD_GoToLineTwo                                      0     0      0      60
   330 ;;                       _LCD_CmdWrite
   331 ;; ---------------------------------------------------------------------------------
   332 ;; (1) _LCD_Init                                             0     0      0      75
   333 ;;                           _delay_us
   334 ;;                       _LCD_CmdWrite
   335 ;; ---------------------------------------------------------------------------------
   336 ;; (2) _LCD_DataWrite                                        1     1      0      60
   337 ;;                                              4 COMMON     1     1      0
   338 ;;                           _delay_us
   339 ;;                           _delay_ms
   340 ;; ---------------------------------------------------------------------------------
   341 ;; (2) _LCD_CmdWrite                                         1     1      0      60
   342 ;;                                              4 COMMON     1     1      0
   343 ;;                           _delay_us
   344 ;;                           _delay_ms
   345 ;; ---------------------------------------------------------------------------------
   346 ;; (3) _delay_ms                                             2     0      2      30
   347 ;;                                              2 COMMON     2     0      2
   348 ;;                           _delay_us
   349 ;; ---------------------------------------------------------------------------------
   350 ;; (1) _ADC_StartConversion                                  5     3      2      30
   351 ;;                                              2 COMMON     5     3      2
   352 ;;                           _delay_us
   353 ;; ---------------------------------------------------------------------------------
   354 ;; (2) ___lwmod                                              6     2      4     105
   355 ;;                                              0 COMMON     6     2      4
   356 ;; ---------------------------------------------------------------------------------
   357 ;; (2) ___lwdiv                                              8     4      4     105
   358 ;;                                              0 COMMON     8     4      4
   359 ;; ---------------------------------------------------------------------------------
   360 ;; (4) _delay_us                                             2     0      2      15
   361 ;;                                              0 COMMON     2     0      2
   362 ;; ---------------------------------------------------------------------------------
   363 ;; (1) _ADC_Init                                             0     0      0       0
   364 ;; ---------------------------------------------------------------------------------
   365 ;; Estimated maximum stack depth 4
   366 ;; ---------------------------------------------------------------------------------
   367                           
   368 ;; Call Graph Graphs:
   369                           
   370 ;; _main (ROOT)
   371 ;;   _LCD_Init
   372 ;;     _delay_us
   373 ;;     _LCD_CmdWrite
   374 ;;       _delay_us
   375 ;;       _delay_ms
   376 ;;         _delay_us
   377 ;;   _ADC_Init
   378 ;;   _LCD_DisplayString
   379 ;;     _LCD_DataWrite
   380 ;;       _delay_us
   381 ;;       _delay_ms
   382 ;;         _delay_us
   383 ;;   _ADC_StartConversion
   384 ;;     _delay_us
   385 ;;   _LCD_GoToLineTwo
   386 ;;     _LCD_CmdWrite
   387 ;;       _delay_us
   388 ;;       _delay_ms
   389 ;;         _delay_us
   390 ;;   _LCD_DisplayNumber
   391 ;;     ___lwdiv
   392 ;;     _LCD_DataWrite
   393 ;;       _delay_us
   394 ;;       _delay_ms
   395 ;;         _delay_us
   396 ;;     ___lwmod
   397 ;;
   398                           
   399 ;; Address spaces:
   400                           
   401 ;;Name               Size   Autos  Total    Cost      Usage
   402 ;;BITCOMMON            E      0       0       0        0.0%
   403 ;;EEDATA             100      0       0       0        0.0%
   404 ;;NULL                 0      0       0       0        0.0%
   405 ;;CODE                 0      0       0       0        0.0%
   406 ;;COMMON               E      C       C       1       85.7%
   407 ;;BITSFR0              0      0       0       1        0.0%
   408 ;;SFR0                 0      0       0       1        0.0%
   409 ;;BITSFR1              0      0       0       2        0.0%
   410 ;;SFR1                 0      0       0       2        0.0%
   411 ;;STACK                0      0       4       2        0.0%
   412 ;;ABS                  0      0       0       3        0.0%
   413 ;;BITBANK0            50      0       0       4        0.0%
   414 ;;BITSFR3              0      0       0       4        0.0%
   415 ;;SFR3                 0      0       0       4        0.0%
   416 ;;BANK0               50      0       0       5        0.0%
   417 ;;BITSFR2              0      0       0       5        0.0%
   418 ;;SFR2                 0      0       0       5        0.0%
   419 ;;BITBANK1            50      0       0       6        0.0%
   420 ;;BANK1               50      0       0       7        0.0%
   421 ;;BITBANK3            60      0       0       8        0.0%
   422 ;;BANK3               60      0       0       9        0.0%
   423 ;;BITBANK2            60      0       0      10        0.0%
   424 ;;BANK2               60      0       0      11        0.0%
   425 ;;DATA                 0      0       0      12        0.0%
   426                           
   427                           	global	_main
   428                           psect	maintext,global,class=CODE,delta=2
   429                           global __pmaintext
   430  0650                     __pmaintext:
   431                           
   432 ;; *************** function _main *****************
   433 ;; Defined at:
   434 ;;		line 19 in file "C:\Users\Xplore_labZ\Saved Games\Desktop\Sample_Programs_updated\Pic\Ultra_Pic\Adc\Single_Channel\m
       ain.c"
   435 ;; Parameters:    Size  Location     Type
   436 ;;		None
   437 ;; Auto vars:     Size  Location     Type
   438 ;;  adc_result      2   10[COMMON] unsigned int 
   439 ;; Return value:  Size  Location     Type
   440 ;;		None               void
   441 ;; Registers used:
   442 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   443 ;; Tracked objects:
   444 ;;		On entry : 17F/0
   445 ;;		On exit  : 0/0
   446 ;;		Unchanged: 0/0
   447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   448 ;;      Params:         0       0       0       0       0
   449 ;;      Locals:         2       0       0       0       0
   450 ;;      Temps:          0       0       0       0       0
   451 ;;      Totals:         2       0       0       0       0
   452 ;;Total ram usage:        2 bytes
   453 ;; Hardware stack levels required when called:    4
   454 ;; This function calls:
   455 ;;		_LCD_Init
   456 ;;		_ADC_Init
   457 ;;		_LCD_DisplayString
   458 ;;		_ADC_StartConversion
   459 ;;		_LCD_GoToLineTwo
   460 ;;		_LCD_DisplayNumber
   461 ;; This function is called by:
   462 ;;		Startup code after reset
   463 ;; This function uses a non-reentrant model
   464 ;;
   465                           psect	maintext
   466                           	file	"C:\Users\Xplore_labZ\Saved Games\Desktop\Sample_Programs_updated\Pic\Ultra_Pic\Ad
                                 c\Single_Channel\main.c"
   467                           	line	19
   468                           	global	__size_of_main
   469  0032                     	__size_of_main	equ	__end_of_main-_main
   470                           	
   471  0650                     _main:	
   472                           	opt	stack 4
   473                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   474                           	line	23
   475                           	
   476  0650                     l4991:	
   477                           ;main.c: 20: unsigned int adc_result;
   478                           ;main.c: 23: LCD_Init();
   479  0650  120A  118A  262A   	fcall	_LCD_Init
              120A  118A         
   480                           	line	26
   481                           ;main.c: 26: ADC_Init();
   482  0655  120A  118A  259C   	fcall	_ADC_Init
              120A  118A         
   483                           	line	29
   484                           	
   485  065A                     l4993:	
   486                           ;main.c: 29: LCD_DisplayString("ADC Channel zero");
   487  065A  3001               	movlw	((STR_1-__stringbase))&0ffh
   488  065B  120A  118A  2609   	fcall	_LCD_DisplayString
              120A  118A         
   489  0660  2E61               	goto	l4995
   490                           	line	32
   491                           ;main.c: 32: while(1)
   492                           	
   493  0661                     l2829:	
   494                           	line	35
   495                           	
   496  0661                     l4995:	
   497                           ;main.c: 33: {
   498                           ;main.c: 35: adc_result= ADC_StartConversion(0);
   499  0661  3000               	movlw	(0)
   500  0662  120A  118A  2682   	fcall	_ADC_StartConversion
              120A  118A         
   501  0667  0873               	movf	(1+(?_ADC_StartConversion)),w
   502  0668  01FB               	clrf	(main@adc_result+1)
   503  0669  07FB               	addwf	(main@adc_result+1)
   504  066A  0872               	movf	(0+(?_ADC_StartConversion)),w
   505  066B  01FA               	clrf	(main@adc_result)
   506  066C  07FA               	addwf	(main@adc_result)
   507                           
   508                           	line	38
   509                           	
   510  066D                     l4997:	
   511                           ;main.c: 38: LCD_GoToLineTwo();
   512  066D  120A  118A  2595   	fcall	_LCD_GoToLineTwo
              120A  118A         
   513                           	line	39
   514                           	
   515  0672                     l4999:	
   516                           ;main.c: 39: LCD_DisplayNumber(adc_result);
   517  0672  087B               	movf	(main@adc_result+1),w
   518  0673  01F9               	clrf	(?_LCD_DisplayNumber+1)
   519  0674  07F9               	addwf	(?_LCD_DisplayNumber+1)
   520  0675  087A               	movf	(main@adc_result),w
   521  0676  01F8               	clrf	(?_LCD_DisplayNumber)
   522  0677  07F8               	addwf	(?_LCD_DisplayNumber)
   523                           
   524  0678  120A  118A  2752   	fcall	_LCD_DisplayNumber
              120A  118A         
   525  067D  2E61               	goto	l4995
   526                           	line	40
   527                           	
   528  067E                     l2830:	
   529                           	line	32
   530  067E  2E61               	goto	l4995
   531                           	
   532  067F                     l2831:	
   533                           	line	43
   534                           	
   535  067F                     l2832:	
   536                           	global	start
   537  067F  120A  118A  2800   	ljmp	start
   538                           	opt stack 0
   539                           GLOBAL	__end_of_main
   540  0682                     	__end_of_main:
   541 ;; =============== function _main ends ============
   542                           
   543                           	signat	_main,88
   544                           	global	_LCD_DisplayNumber
   545                           psect	text167,local,class=CODE,delta=2
   546                           global __ptext167
   547  0752                     __ptext167:
   548                           
   549 ;; *************** function _LCD_DisplayNumber *****************
   550 ;; Defined at:
   551 ;;		line 284 in file "C:\Users\Xplore_labZ\Saved Games\Desktop\Sample_Programs_updated\Pic\Ultra_Pic\Adc\Single_Channel\
       lcd_8_bit.c"
   552 ;; Parameters:    Size  Location     Type
   553 ;;  num             2    8[COMMON] unsigned int 
   554 ;; Auto vars:     Size  Location     Type
   555 ;;		None
   556 ;; Return value:  Size  Location     Type
   557 ;;		None               void
   558 ;; Registers used:
   559 ;;		wreg, status,2, status,0, pclath, cstack
   560 ;; Tracked objects:
   561 ;;		On entry : 0/0
   562 ;;		On exit  : 0/0
   563 ;;		Unchanged: 0/0
   564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   565 ;;      Params:         2       0       0       0       0
   566 ;;      Locals:         0       0       0       0       0
   567 ;;      Temps:          0       0       0       0       0
   568 ;;      Totals:         2       0       0       0       0
   569 ;;Total ram usage:        2 bytes
   570 ;; Hardware stack levels used:    1
   571 ;; Hardware stack levels required when called:    3
   572 ;; This function calls:
   573 ;;		___lwdiv
   574 ;;		_LCD_DataWrite
   575 ;;		___lwmod
   576 ;; This function is called by:
   577 ;;		_main
   578 ;; This function uses a non-reentrant model
   579 ;;
   580                           psect	text167
   581                           	file	"C:\Users\Xplore_labZ\Saved Games\Desktop\Sample_Programs_updated\Pic\Ultra_Pic\Ad
                                 c\Single_Channel\lcd_8_bit.c"
   582                           	line	284
   583                           	global	__size_of_LCD_DisplayNumber
   584  00AE                     	__size_of_LCD_DisplayNumber	equ	__end_of_LCD_DisplayNumber-_LCD_DisplayNumber
   585                           	
   586  0752                     _LCD_DisplayNumber:	
   587                           	opt	stack 4
   588                           ; Regs used in _LCD_DisplayNumber: [wreg+status,2+status,0+pclath+cstack]
   589                           	line	285
   590                           	
   591  0752                     l4989:	
   592                           ;lcd_8_bit.c: 285: LCD_DataWrite((num/10000)+0x30);
   593  0752  3010               	movlw	low(02710h)
   594  0753  00F0               	movwf	(?___lwdiv)
   595  0754  3027               	movlw	high(02710h)
   596  0755  00F1               	movwf	((?___lwdiv))+1
   597  0756  0879               	movf	(LCD_DisplayNumber@num+1),w
   598  0757  01F3               	clrf	1+(?___lwdiv)+02h
   599  0758  07F3               	addwf	1+(?___lwdiv)+02h
   600  0759  0878               	movf	(LCD_DisplayNumber@num),w
   601  075A  01F2               	clrf	0+(?___lwdiv)+02h
   602  075B  07F2               	addwf	0+(?___lwdiv)+02h
   603                           
   604  075C  120A  118A  2704   	fcall	___lwdiv
              120A  118A         
   605  0761  0870               	movf	(0+(?___lwdiv)),w
   606  0762  3E30               	addlw	030h
   607  0763  120A  118A  25EB   	fcall	_LCD_DataWrite
              120A  118A         
   608                           	line	286
   609                           ;lcd_8_bit.c: 286: num=num%10000;
   610  0768  3010               	movlw	low(02710h)
   611  0769  00F0               	movwf	(?___lwmod)
   612  076A  3027               	movlw	high(02710h)
   613  076B  00F1               	movwf	((?___lwmod))+1
   614  076C  0879               	movf	(LCD_DisplayNumber@num+1),w
   615  076D  01F3               	clrf	1+(?___lwmod)+02h
   616  076E  07F3               	addwf	1+(?___lwmod)+02h
   617  076F  0878               	movf	(LCD_DisplayNumber@num),w
   618  0770  01F2               	clrf	0+(?___lwmod)+02h
   619  0771  07F2               	addwf	0+(?___lwmod)+02h
   620                           
   621  0772  120A  118A  26C0   	fcall	___lwmod
              120A  118A         
   622  0777  0871               	movf	(1+(?___lwmod)),w
   623  0778  01F9               	clrf	(LCD_DisplayNumber@num+1)
   624  0779  07F9               	addwf	(LCD_DisplayNumber@num+1)
   625  077A  0870               	movf	(0+(?___lwmod)),w
   626  077B  01F8               	clrf	(LCD_DisplayNumber@num)
   627  077C  07F8               	addwf	(LCD_DisplayNumber@num)
   628                           
   629                           	line	288
   630                           ;lcd_8_bit.c: 288: LCD_DataWrite((num/1000)+0x30);
   631  077D  30E8               	movlw	low(03E8h)
   632  077E  00F0               	movwf	(?___lwdiv)
   633  077F  3003               	movlw	high(03E8h)
   634  0780  00F1               	movwf	((?___lwdiv))+1
   635  0781  0879               	movf	(LCD_DisplayNumber@num+1),w
   636  0782  01F3               	clrf	1+(?___lwdiv)+02h
   637  0783  07F3               	addwf	1+(?___lwdiv)+02h
   638  0784  0878               	movf	(LCD_DisplayNumber@num),w
   639  0785  01F2               	clrf	0+(?___lwdiv)+02h
   640  0786  07F2               	addwf	0+(?___lwdiv)+02h
   641                           
   642  0787  120A  118A  2704   	fcall	___lwdiv
              120A  118A         
   643  078C  0870               	movf	(0+(?___lwdiv)),w
   644  078D  3E30               	addlw	030h
   645  078E  120A  118A  25EB   	fcall	_LCD_DataWrite
              120A  118A         
   646                           	line	289
   647                           ;lcd_8_bit.c: 289: num=num%1000;
   648  0793  30E8               	movlw	low(03E8h)
   649  0794  00F0               	movwf	(?___lwmod)
   650  0795  3003               	movlw	high(03E8h)
   651  0796  00F1               	movwf	((?___lwmod))+1
   652  0797  0879               	movf	(LCD_DisplayNumber@num+1),w
   653  0798  01F3               	clrf	1+(?___lwmod)+02h
   654  0799  07F3               	addwf	1+(?___lwmod)+02h
   655  079A  0878               	movf	(LCD_DisplayNumber@num),w
   656  079B  01F2               	clrf	0+(?___lwmod)+02h
   657  079C  07F2               	addwf	0+(?___lwmod)+02h
   658                           
   659  079D  120A  118A  26C0   	fcall	___lwmod
              120A  118A         
   660  07A2  0871               	movf	(1+(?___lwmod)),w
   661  07A3  01F9               	clrf	(LCD_DisplayNumber@num+1)
   662  07A4  07F9               	addwf	(LCD_DisplayNumber@num+1)
   663  07A5  0870               	movf	(0+(?___lwmod)),w
   664  07A6  01F8               	clrf	(LCD_DisplayNumber@num)
   665  07A7  07F8               	addwf	(LCD_DisplayNumber@num)
   666                           
   667                           	line	291
   668                           ;lcd_8_bit.c: 291: LCD_DataWrite((num/100)+0x30);
   669  07A8  3064               	movlw	low(064h)
   670  07A9  00F0               	movwf	(?___lwdiv)
   671  07AA  3000               	movlw	high(064h)
   672  07AB  00F1               	movwf	((?___lwdiv))+1
   673  07AC  0879               	movf	(LCD_DisplayNumber@num+1),w
   674  07AD  01F3               	clrf	1+(?___lwdiv)+02h
   675  07AE  07F3               	addwf	1+(?___lwdiv)+02h
   676  07AF  0878               	movf	(LCD_DisplayNumber@num),w
   677  07B0  01F2               	clrf	0+(?___lwdiv)+02h
   678  07B1  07F2               	addwf	0+(?___lwdiv)+02h
   679                           
   680  07B2  120A  118A  2704   	fcall	___lwdiv
              120A  118A         
   681  07B7  0870               	movf	(0+(?___lwdiv)),w
   682  07B8  3E30               	addlw	030h
   683  07B9  120A  118A  25EB   	fcall	_LCD_DataWrite
              120A  118A         
   684                           	line	292
   685                           ;lcd_8_bit.c: 292: num=num%100;
   686  07BE  3064               	movlw	low(064h)
   687  07BF  00F0               	movwf	(?___lwmod)
   688  07C0  3000               	movlw	high(064h)
   689  07C1  00F1               	movwf	((?___lwmod))+1
   690  07C2  0879               	movf	(LCD_DisplayNumber@num+1),w
   691  07C3  01F3               	clrf	1+(?___lwmod)+02h
   692  07C4  07F3               	addwf	1+(?___lwmod)+02h
   693  07C5  0878               	movf	(LCD_DisplayNumber@num),w
   694  07C6  01F2               	clrf	0+(?___lwmod)+02h
   695  07C7  07F2               	addwf	0+(?___lwmod)+02h
   696                           
   697  07C8  120A  118A  26C0   	fcall	___lwmod
              120A  118A         
   698  07CD  0871               	movf	(1+(?___lwmod)),w
   699  07CE  01F9               	clrf	(LCD_DisplayNumber@num+1)
   700  07CF  07F9               	addwf	(LCD_DisplayNumber@num+1)
   701  07D0  0870               	movf	(0+(?___lwmod)),w
   702  07D1  01F8               	clrf	(LCD_DisplayNumber@num)
   703  07D2  07F8               	addwf	(LCD_DisplayNumber@num)
   704                           
   705                           	line	294
   706                           ;lcd_8_bit.c: 294: LCD_DataWrite((num/10)+0x30);
   707  07D3  300A               	movlw	low(0Ah)
   708  07D4  00F0               	movwf	(?___lwdiv)
   709  07D5  3000               	movlw	high(0Ah)
   710  07D6  00F1               	movwf	((?___lwdiv))+1
   711  07D7  0879               	movf	(LCD_DisplayNumber@num+1),w
   712  07D8  01F3               	clrf	1+(?___lwdiv)+02h
   713  07D9  07F3               	addwf	1+(?___lwdiv)+02h
   714  07DA  0878               	movf	(LCD_DisplayNumber@num),w
   715  07DB  01F2               	clrf	0+(?___lwdiv)+02h
   716  07DC  07F2               	addwf	0+(?___lwdiv)+02h
   717                           
   718  07DD  120A  118A  2704   	fcall	___lwdiv
              120A  118A         
   719  07E2  0870               	movf	(0+(?___lwdiv)),w
   720  07E3  3E30               	addlw	030h
   721  07E4  120A  118A  25EB   	fcall	_LCD_DataWrite
              120A  118A         
   722                           	line	296
   723                           ;lcd_8_bit.c: 296: LCD_DataWrite((num%10)+0x30);
   724  07E9  300A               	movlw	low(0Ah)
   725  07EA  00F0               	movwf	(?___lwmod)
   726  07EB  3000               	movlw	high(0Ah)
   727  07EC  00F1               	movwf	((?___lwmod))+1
   728  07ED  0879               	movf	(LCD_DisplayNumber@num+1),w
   729  07EE  01F3               	clrf	1+(?___lwmod)+02h
   730  07EF  07F3               	addwf	1+(?___lwmod)+02h
   731  07F0  0878               	movf	(LCD_DisplayNumber@num),w
   732  07F1  01F2               	clrf	0+(?___lwmod)+02h
   733  07F2  07F2               	addwf	0+(?___lwmod)+02h
   734                           
   735  07F3  120A  118A  26C0   	fcall	___lwmod
              120A  118A         
   736  07F8  0870               	movf	(0+(?___lwmod)),w
   737  07F9  3E30               	addlw	030h
   738  07FA  120A  118A  25EB   	fcall	_LCD_DataWrite
              120A  118A         
   739                           	line	298
   740                           	
   741  07FF                     l2113:	
   742  07FF  0008               	return
   743                           	opt stack 0
   744                           GLOBAL	__end_of_LCD_DisplayNumber
   745  0800                     	__end_of_LCD_DisplayNumber:
   746 ;; =============== function _LCD_DisplayNumber ends ============
   747                           
   748                           	signat	_LCD_DisplayNumber,4216
   749                           	global	_LCD_DisplayString
   750                           psect	text168,local,class=CODE,delta=2
   751                           global __ptext168
   752  0609                     __ptext168:
   753                           
   754 ;; *************** function _LCD_DisplayString *****************
   755 ;; Defined at:
   756 ;;		line 248 in file "C:\Users\Xplore_labZ\Saved Games\Desktop\Sample_Programs_updated\Pic\Ultra_Pic\Adc\Single_Channel\
       lcd_8_bit.c"
   757 ;; Parameters:    Size  Location     Type
   758 ;;  string_ptr      1    wreg     PTR unsigned char 
   759 ;;		 -> STR_1(17), 
   760 ;; Auto vars:     Size  Location     Type
   761 ;;  string_ptr      1    6[COMMON] PTR unsigned char 
   762 ;;		 -> STR_1(17), 
   763 ;; Return value:  Size  Location     Type
   764 ;;		None               void
   765 ;; Registers used:
   766 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   767 ;; Tracked objects:
   768 ;;		On entry : 0/0
   769 ;;		On exit  : 0/0
   770 ;;		Unchanged: 0/0
   771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   772 ;;      Params:         0       0       0       0       0
   773 ;;      Locals:         1       0       0       0       0
   774 ;;      Temps:          1       0       0       0       0
   775 ;;      Totals:         2       0       0       0       0
   776 ;;Total ram usage:        2 bytes
   777 ;; Hardware stack levels used:    1
   778 ;; Hardware stack levels required when called:    3
   779 ;; This function calls:
   780 ;;		_LCD_DataWrite
   781 ;; This function is called by:
   782 ;;		_main
   783 ;; This function uses a non-reentrant model
   784 ;;
   785                           psect	text168
   786                           	file	"C:\Users\Xplore_labZ\Saved Games\Desktop\Sample_Programs_updated\Pic\Ultra_Pic\Ad
                                 c\Single_Channel\lcd_8_bit.c"
   787                           	line	248
   788                           	global	__size_of_LCD_DisplayString
   789  0021                     	__size_of_LCD_DisplayString	equ	__end_of_LCD_DisplayString-_LCD_DisplayString
   790                           	
   791  0609                     _LCD_DisplayString:	
   792                           	opt	stack 4
   793                           ; Regs used in _LCD_DisplayString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   794                           ;LCD_DisplayString@string_ptr stored from wreg
   795  0609  00F6               	movwf	(LCD_DisplayString@string_ptr)
   796                           	line	249
   797                           	
   798  060A                     l4981:	
   799                           ;lcd_8_bit.c: 249: while(*string_ptr)
   800  060A  2E1C               	goto	l4987
   801                           	
   802  060B                     l2108:	
   803                           	line	250
   804                           	
   805  060B                     l4983:	
   806                           ;lcd_8_bit.c: 250: LCD_DataWrite(*string_ptr++);
   807  060B  0876               	movf	(LCD_DisplayString@string_ptr),w
   808  060C  0084               	movwf	fsr0
   809  060D  120A  118A  2003   	fcall	stringdir
              120A  118A         
   810  0612  120A  118A  25EB   	fcall	_LCD_DataWrite
              120A  118A         
   811                           	
   812  0617                     l4985:	
   813  0617  3001               	movlw	(01h)
   814  0618  00F5               	movwf	(??_LCD_DisplayString+0)+0
   815  0619  0875               	movf	(??_LCD_DisplayString+0)+0,w
   816  061A  07F6               	addwf	(LCD_DisplayString@string_ptr),f
   817  061B  2E1C               	goto	l4987
   818                           	
   819  061C                     l2107:	
   820                           	line	249
   821                           	
   822  061C                     l4987:	
   823  061C  0876               	movf	(LCD_DisplayString@string_ptr),w
   824  061D  0084               	movwf	fsr0
   825  061E  120A  118A  2003   	fcall	stringdir
              120A  118A         
   826  0623  3800               	iorlw	0
   827  0624  1D03               	skipz
   828  0625  2E27               	goto	u2421
   829  0626  2E28               	goto	u2420
   830  0627                     u2421:
   831  0627  2E0B               	goto	l4983
   832  0628                     u2420:
   833  0628  2E29               	goto	l2110
   834                           	
   835  0629                     l2109:	
   836                           	line	251
   837                           	
   838  0629                     l2110:	
   839  0629  0008               	return
   840                           	opt stack 0
   841                           GLOBAL	__end_of_LCD_DisplayString
   842  062A                     	__end_of_LCD_DisplayString:
   843 ;; =============== function _LCD_DisplayString ends ============
   844                           
   845                           	signat	_LCD_DisplayString,4216
   846                           	global	_LCD_GoToLineTwo
   847                           psect	text169,local,class=CODE,delta=2
   848                           global __ptext169
   849  0595                     __ptext169:
   850                           
   851 ;; *************** function _LCD_GoToLineTwo *****************
   852 ;; Defined at:
   853 ;;		line 129 in file "C:\Users\Xplore_labZ\Saved Games\Desktop\Sample_Programs_updated\Pic\Ultra_Pic\Adc\Single_Channel\
       lcd_8_bit.c"
   854 ;; Parameters:    Size  Location     Type
   855 ;;		None
   856 ;; Auto vars:     Size  Location     Type
   857 ;;		None
   858 ;; Return value:  Size  Location     Type
   859 ;;		None               void
   860 ;; Registers used:
   861 ;;		wreg, status,2, status,0, pclath, cstack
   862 ;; Tracked objects:
   863 ;;		On entry : 0/0
   864 ;;		On exit  : 0/0
   865 ;;		Unchanged: 0/0
   866 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   867 ;;      Params:         0       0       0       0       0
   868 ;;      Locals:         0       0       0       0       0
   869 ;;      Temps:          0       0       0       0       0
   870 ;;      Totals:         0       0       0       0       0
   871 ;;Total ram usage:        0 bytes
   872 ;; Hardware stack levels used:    1
   873 ;; Hardware stack levels required when called:    3
   874 ;; This function calls:
   875 ;;		_LCD_CmdWrite
   876 ;; This function is called by:
   877 ;;		_main
   878 ;; This function uses a non-reentrant model
   879 ;;
   880                           psect	text169
   881                           	file	"C:\Users\Xplore_labZ\Saved Games\Desktop\Sample_Programs_updated\Pic\Ultra_Pic\Ad
                                 c\Single_Channel\lcd_8_bit.c"
   882                           	line	129
   883                           	global	__size_of_LCD_GoToLineTwo
   884  0007                     	__size_of_LCD_GoToLineTwo	equ	__end_of_LCD_GoToLineTwo-_LCD_GoToLineTwo
   885                           	
   886  0595                     _LCD_GoToLineTwo:	
   887                           	opt	stack 4
   888                           ; Regs used in _LCD_GoToLineTwo: [wreg+status,2+status,0+pclath+cstack]
   889                           	line	130
   890                           	
   891  0595                     l4979:	
   892                           ;lcd_8_bit.c: 130: LCD_CmdWrite(0xc0);
   893  0595  30C0               	movlw	(0C0h)
   894  0596  120A  118A  25CD   	fcall	_LCD_CmdWrite
              120A  118A         
   895                           	line	131
   896                           	
   897  059B                     l2093:	
   898  059B  0008               	return
   899                           	opt stack 0
   900                           GLOBAL	__end_of_LCD_GoToLineTwo
   901  059C                     	__end_of_LCD_GoToLineTwo:
   902 ;; =============== function _LCD_GoToLineTwo ends ============
   903                           
   904                           	signat	_LCD_GoToLineTwo,88
   905                           	global	_LCD_Init
   906                           psect	text170,local,class=CODE,delta=2
   907                           global __ptext170
   908  062A                     __ptext170:
   909                           
   910 ;; *************** function _LCD_Init *****************
   911 ;; Defined at:
   912 ;;		line 67 in file "C:\Users\Xplore_labZ\Saved Games\Desktop\Sample_Programs_updated\Pic\Ultra_Pic\Adc\Single_Channel\l
       cd_8_bit.c"
   913 ;; Parameters:    Size  Location     Type
   914 ;;		None
   915 ;; Auto vars:     Size  Location     Type
   916 ;;		None
   917 ;; Return value:  Size  Location     Type
   918 ;;		None               void
   919 ;; Registers used:
   920 ;;		wreg, status,2, status,0, pclath, cstack
   921 ;; Tracked objects:
   922 ;;		On entry : 0/0
   923 ;;		On exit  : 0/0
   924 ;;		Unchanged: 0/0
   925 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   926 ;;      Params:         0       0       0       0       0
   927 ;;      Locals:         0       0       0       0       0
   928 ;;      Temps:          0       0       0       0       0
   929 ;;      Totals:         0       0       0       0       0
   930 ;;Total ram usage:        0 bytes
   931 ;; Hardware stack levels used:    1
   932 ;; Hardware stack levels required when called:    3
   933 ;; This function calls:
   934 ;;		_delay_us
   935 ;;		_LCD_CmdWrite
   936 ;; This function is called by:
   937 ;;		_main
   938 ;; This function uses a non-reentrant model
   939 ;;
   940                           psect	text170
   941                           	file	"C:\Users\Xplore_labZ\Saved Games\Desktop\Sample_Programs_updated\Pic\Ultra_Pic\Ad
                                 c\Single_Channel\lcd_8_bit.c"
   942                           	line	67
   943                           	global	__size_of_LCD_Init
   944  0026                     	__size_of_LCD_Init	equ	__end_of_LCD_Init-_LCD_Init
   945                           	
   946  062A                     _LCD_Init:	
   947                           	opt	stack 4
   948                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
   949                           	line	68
   950                           	
   951  062A                     l4973:	
   952                           ;lcd_8_bit.c: 68: delay_us(5000);
   953  062A  3088               	movlw	low(01388h)
   954  062B  00F0               	movwf	(?_delay_us)
   955  062C  3013               	movlw	high(01388h)
   956  062D  00F1               	movwf	((?_delay_us))+1
   957  062E  120A  118A  25A4   	fcall	_delay_us
              120A  118A         
   958                           	line	70
   959                           	
   960  0633                     l4975:	
   961                           ;lcd_8_bit.c: 70: TRISB=0x00;
   962  0633  1683               	bsf	status, 5	;RP0=1, select bank1
   963  0634  1303               	bcf	status, 6	;RP1=0, select bank1
   964  0635  0186               	clrf	(134)^080h	;volatile
   965                           	line	71
   966                           	
   967  0636                     l4977:	
   968                           ;lcd_8_bit.c: 71: TRISD=0x00;
   969  0636  0188               	clrf	(136)^080h	;volatile
   970                           	line	73
   971                           ;lcd_8_bit.c: 73: LCD_CmdWrite(0x38);
   972  0637  3038               	movlw	(038h)
   973  0638  120A  118A  25CD   	fcall	_LCD_CmdWrite
              120A  118A         
   974                           	line	74
   975                           ;lcd_8_bit.c: 74: LCD_CmdWrite(0x0E);
   976  063D  300E               	movlw	(0Eh)
   977  063E  120A  118A  25CD   	fcall	_LCD_CmdWrite
              120A  118A         
   978                           	line	75
   979                           ;lcd_8_bit.c: 75: LCD_CmdWrite(0x01);
   980  0643  3001               	movlw	(01h)
   981  0644  120A  118A  25CD   	fcall	_LCD_CmdWrite
              120A  118A         
   982                           	line	76
   983                           ;lcd_8_bit.c: 76: LCD_CmdWrite(0x80);
   984  0649  3080               	movlw	(080h)
   985  064A  120A  118A  25CD   	fcall	_LCD_CmdWrite
              120A  118A         
   986                           	line	78
   987                           	
   988  064F                     l2084:	
   989  064F  0008               	return
   990                           	opt stack 0
   991                           GLOBAL	__end_of_LCD_Init
   992  0650                     	__end_of_LCD_Init:
   993 ;; =============== function _LCD_Init ends ============
   994                           
   995                           	signat	_LCD_Init,88
   996                           	global	_LCD_DataWrite
   997                           psect	text171,local,class=CODE,delta=2
   998                           global __ptext171
   999  05EB                     __ptext171:
  1000                           
  1001 ;; *************** function _LCD_DataWrite *****************
  1002 ;; Defined at:
  1003 ;;		line 216 in file "C:\Users\Xplore_labZ\Saved Games\Desktop\Sample_Programs_updated\Pic\Ultra_Pic\Adc\Single_Channel\
       lcd_8_bit.c"
  1004 ;; Parameters:    Size  Location     Type
  1005 ;;  dat             1    wreg     unsigned char 
  1006 ;; Auto vars:     Size  Location     Type
  1007 ;;  dat             1    4[COMMON] unsigned char 
  1008 ;; Return value:  Size  Location     Type
  1009 ;;		None               void
  1010 ;; Registers used:
  1011 ;;		wreg, status,2, status,0, pclath, cstack
  1012 ;; Tracked objects:
  1013 ;;		On entry : 0/0
  1014 ;;		On exit  : 0/0
  1015 ;;		Unchanged: 0/0
  1016 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1017 ;;      Params:         0       0       0       0       0
  1018 ;;      Locals:         1       0       0       0       0
  1019 ;;      Temps:          0       0       0       0       0
  1020 ;;      Totals:         1       0       0       0       0
  1021 ;;Total ram usage:        1 bytes
  1022 ;; Hardware stack levels used:    1
  1023 ;; Hardware stack levels required when called:    2
  1024 ;; This function calls:
  1025 ;;		_delay_us
  1026 ;;		_delay_ms
  1027 ;; This function is called by:
  1028 ;;		_LCD_DisplayString
  1029 ;;		_LCD_DisplayNumber
  1030 ;;		_LCD_ScrollMessage
  1031 ;;		_LCD_DisplayRtcTime
  1032 ;;		_LCD_DisplayRtcDate
  1033 ;; This function uses a non-reentrant model
  1034 ;;
  1035                           psect	text171
  1036                           	file	"C:\Users\Xplore_labZ\Saved Games\Desktop\Sample_Programs_updated\Pic\Ultra_Pic\Ad
                                 c\Single_Channel\lcd_8_bit.c"
  1037                           	line	216
  1038                           	global	__size_of_LCD_DataWrite
  1039  001E                     	__size_of_LCD_DataWrite	equ	__end_of_LCD_DataWrite-_LCD_DataWrite
  1040                           	
  1041  05EB                     _LCD_DataWrite:	
  1042                           	opt	stack 4
  1043                           ; Regs used in _LCD_DataWrite: [wreg+status,2+status,0+pclath+cstack]
  1044                           ;LCD_DataWrite@dat stored from wreg
  1045                           	line	219
  1046  05EB  00F4               	movwf	(LCD_DataWrite@dat)
  1047                           	
  1048  05EC                     l4959:	
  1049                           ;lcd_8_bit.c: 219: PORTB=dat;
  1050  05EC  0874               	movf	(LCD_DataWrite@dat),w
  1051  05ED  1283               	bcf	status, 5	;RP0=0, select bank0
  1052  05EE  1303               	bcf	status, 6	;RP1=0, select bank0
  1053  05EF  0086               	movwf	(6)	;volatile
  1054                           	line	220
  1055                           	
  1056  05F0                     l4961:	
  1057                           ;lcd_8_bit.c: 220: RD0=1;
  1058  05F0  1408               	bsf	(64/8),(64)&7
  1059                           	line	221
  1060                           	
  1061  05F1                     l4963:	
  1062                           ;lcd_8_bit.c: 221: RD1=0;
  1063  05F1  1088               	bcf	(65/8),(65)&7
  1064                           	line	222
  1065                           	
  1066  05F2                     l4965:	
  1067                           ;lcd_8_bit.c: 222: RD2=1;
  1068  05F2  1508               	bsf	(66/8),(66)&7
  1069                           	line	223
  1070                           	
  1071  05F3                     l4967:	
  1072                           ;lcd_8_bit.c: 223: delay_us(10);
  1073  05F3  300A               	movlw	low(0Ah)
  1074  05F4  00F0               	movwf	(?_delay_us)
  1075  05F5  3000               	movlw	high(0Ah)
  1076  05F6  00F1               	movwf	((?_delay_us))+1
  1077  05F7  120A  118A  25A4   	fcall	_delay_us
              120A  118A         
  1078                           	line	224
  1079                           	
  1080  05FC                     l4969:	
  1081                           ;lcd_8_bit.c: 224: RD2=0;
  1082  05FC  1283               	bcf	status, 5	;RP0=0, select bank0
  1083  05FD  1303               	bcf	status, 6	;RP1=0, select bank0
  1084  05FE  1108               	bcf	(66/8),(66)&7
  1085                           	line	226
  1086                           	
  1087  05FF                     l4971:	
  1088                           ;lcd_8_bit.c: 226: delay_ms(1);
  1089  05FF  3001               	movlw	low(01h)
  1090  0600  00F2               	movwf	(?_delay_ms)
  1091  0601  3000               	movlw	high(01h)
  1092  0602  00F3               	movwf	((?_delay_ms))+1
  1093  0603  120A  118A  25B4   	fcall	_delay_ms
              120A  118A         
  1094                           	line	228
  1095                           	
  1096  0608                     l2104:	
  1097  0608  0008               	return
  1098                           	opt stack 0
  1099                           GLOBAL	__end_of_LCD_DataWrite
  1100  0609                     	__end_of_LCD_DataWrite:
  1101 ;; =============== function _LCD_DataWrite ends ============
  1102                           
  1103                           	signat	_LCD_DataWrite,4216
  1104                           	global	_LCD_CmdWrite
  1105                           psect	text172,local,class=CODE,delta=2
  1106                           global __ptext172
  1107  05CD                     __ptext172:
  1108                           
  1109 ;; *************** function _LCD_CmdWrite *****************
  1110 ;; Defined at:
  1111 ;;		line 185 in file "C:\Users\Xplore_labZ\Saved Games\Desktop\Sample_Programs_updated\Pic\Ultra_Pic\Adc\Single_Channel\
       lcd_8_bit.c"
  1112 ;; Parameters:    Size  Location     Type
  1113 ;;  cmd             1    wreg     unsigned char 
  1114 ;; Auto vars:     Size  Location     Type
  1115 ;;  cmd             1    4[COMMON] unsigned char 
  1116 ;; Return value:  Size  Location     Type
  1117 ;;		None               void
  1118 ;; Registers used:
  1119 ;;		wreg, status,2, status,0, pclath, cstack
  1120 ;; Tracked objects:
  1121 ;;		On entry : 0/0
  1122 ;;		On exit  : 0/0
  1123 ;;		Unchanged: 0/0
  1124 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1125 ;;      Params:         0       0       0       0       0
  1126 ;;      Locals:         1       0       0       0       0
  1127 ;;      Temps:          0       0       0       0       0
  1128 ;;      Totals:         1       0       0       0       0
  1129 ;;Total ram usage:        1 bytes
  1130 ;; Hardware stack levels used:    1
  1131 ;; Hardware stack levels required when called:    2
  1132 ;; This function calls:
  1133 ;;		_delay_us
  1134 ;;		_delay_ms
  1135 ;; This function is called by:
  1136 ;;		_LCD_Init
  1137 ;;		_LCD_GoToLineTwo
  1138 ;;		_LCD_Clear
  1139 ;;		_LCD_GoToLineOne
  1140 ;;		_LCD_GoToXY
  1141 ;;		_LCD_ScrollMessage
  1142 ;; This function uses a non-reentrant model
  1143 ;;
  1144                           psect	text172
  1145                           	file	"C:\Users\Xplore_labZ\Saved Games\Desktop\Sample_Programs_updated\Pic\Ultra_Pic\Ad
                                 c\Single_Channel\lcd_8_bit.c"
  1146                           	line	185
  1147                           	global	__size_of_LCD_CmdWrite
  1148  001E                     	__size_of_LCD_CmdWrite	equ	__end_of_LCD_CmdWrite-_LCD_CmdWrite
  1149                           	
  1150  05CD                     _LCD_CmdWrite:	
  1151                           	opt	stack 4
  1152                           ; Regs used in _LCD_CmdWrite: [wreg+status,2+status,0+pclath+cstack]
  1153                           ;LCD_CmdWrite@cmd stored from wreg
  1154                           	line	187
  1155  05CD  00F4               	movwf	(LCD_CmdWrite@cmd)
  1156                           	
  1157  05CE                     l4945:	
  1158                           ;lcd_8_bit.c: 187: PORTB=cmd;
  1159  05CE  0874               	movf	(LCD_CmdWrite@cmd),w
  1160  05CF  1283               	bcf	status, 5	;RP0=0, select bank0
  1161  05D0  1303               	bcf	status, 6	;RP1=0, select bank0
  1162  05D1  0086               	movwf	(6)	;volatile
  1163                           	line	188
  1164                           	
  1165  05D2                     l4947:	
  1166                           ;lcd_8_bit.c: 188: RD0=0;
  1167  05D2  1008               	bcf	(64/8),(64)&7
  1168                           	line	189
  1169                           	
  1170  05D3                     l4949:	
  1171                           ;lcd_8_bit.c: 189: RD1=0;
  1172  05D3  1088               	bcf	(65/8),(65)&7
  1173                           	line	190
  1174                           	
  1175  05D4                     l4951:	
  1176                           ;lcd_8_bit.c: 190: RD2=1;
  1177  05D4  1508               	bsf	(66/8),(66)&7
  1178                           	line	191
  1179                           	
  1180  05D5                     l4953:	
  1181                           ;lcd_8_bit.c: 191: delay_us(10);
  1182  05D5  300A               	movlw	low(0Ah)
  1183  05D6  00F0               	movwf	(?_delay_us)
  1184  05D7  3000               	movlw	high(0Ah)
  1185  05D8  00F1               	movwf	((?_delay_us))+1
  1186  05D9  120A  118A  25A4   	fcall	_delay_us
              120A  118A         
  1187                           	line	192
  1188                           	
  1189  05DE                     l4955:	
  1190                           ;lcd_8_bit.c: 192: RD2=0;
  1191  05DE  1283               	bcf	status, 5	;RP0=0, select bank0
  1192  05DF  1303               	bcf	status, 6	;RP1=0, select bank0
  1193  05E0  1108               	bcf	(66/8),(66)&7
  1194                           	line	194
  1195                           	
  1196  05E1                     l4957:	
  1197                           ;lcd_8_bit.c: 194: delay_ms(1);
  1198  05E1  3001               	movlw	low(01h)
  1199  05E2  00F2               	movwf	(?_delay_ms)
  1200  05E3  3000               	movlw	high(01h)
  1201  05E4  00F3               	movwf	((?_delay_ms))+1
  1202  05E5  120A  118A  25B4   	fcall	_delay_ms
              120A  118A         
  1203                           	line	195
  1204                           	
  1205  05EA                     l2101:	
  1206  05EA  0008               	return
  1207                           	opt stack 0
  1208                           GLOBAL	__end_of_LCD_CmdWrite
  1209  05EB                     	__end_of_LCD_CmdWrite:
  1210 ;; =============== function _LCD_CmdWrite ends ============
  1211                           
  1212                           	signat	_LCD_CmdWrite,4216
  1213                           	global	_delay_ms
  1214                           psect	text173,local,class=CODE,delta=2
  1215                           global __ptext173
  1216  05B4                     __ptext173:
  1217                           
  1218 ;; *************** function _delay_ms *****************
  1219 ;; Defined at:
  1220 ;;		line 47 in file "C:\Users\Xplore_labZ\Saved Games\Desktop\Sample_Programs_updated\Pic\Ultra_Pic\Adc\Single_Channel\d
       elay.c"
  1221 ;; Parameters:    Size  Location     Type
  1222 ;;  ms_count        2    2[COMMON] unsigned int 
  1223 ;; Auto vars:     Size  Location     Type
  1224 ;;		None
  1225 ;; Return value:  Size  Location     Type
  1226 ;;		None               void
  1227 ;; Registers used:
  1228 ;;		wreg, status,2, status,0, pclath, cstack
  1229 ;; Tracked objects:
  1230 ;;		On entry : 0/0
  1231 ;;		On exit  : 0/0
  1232 ;;		Unchanged: 0/0
  1233 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1234 ;;      Params:         2       0       0       0       0
  1235 ;;      Locals:         0       0       0       0       0
  1236 ;;      Temps:          0       0       0       0       0
  1237 ;;      Totals:         2       0       0       0       0
  1238 ;;Total ram usage:        2 bytes
  1239 ;; Hardware stack levels used:    1
  1240 ;; Hardware stack levels required when called:    1
  1241 ;; This function calls:
  1242 ;;		_delay_us
  1243 ;; This function is called by:
  1244 ;;		_LCD_CmdWrite
  1245 ;;		_LCD_DataWrite
  1246 ;;		_delay_sec
  1247 ;;		_LCD_ScrollMessage
  1248 ;; This function uses a non-reentrant model
  1249 ;;
  1250                           psect	text173
  1251                           	file	"C:\Users\Xplore_labZ\Saved Games\Desktop\Sample_Programs_updated\Pic\Ultra_Pic\Ad
                                 c\Single_Channel\delay.c"
  1252                           	line	47
  1253                           	global	__size_of_delay_ms
  1254  0019                     	__size_of_delay_ms	equ	__end_of_delay_ms-_delay_ms
  1255                           	
  1256  05B4                     _delay_ms:	
  1257                           	opt	stack 4
  1258                           ; Regs used in _delay_ms: [wreg+status,2+status,0+pclath+cstack]
  1259                           	line	48
  1260                           	
  1261  05B4                     l4937:	
  1262                           ;delay.c: 48: while(ms_count!=0)
  1263  05B4  2DC5               	goto	l4943
  1264                           	
  1265  05B5                     l1385:	
  1266                           	line	50
  1267                           	
  1268  05B5                     l4939:	
  1269                           ;delay.c: 49: {
  1270                           ;delay.c: 50: delay_us(300);
  1271  05B5  302C               	movlw	low(012Ch)
  1272  05B6  00F0               	movwf	(?_delay_us)
  1273  05B7  3001               	movlw	high(012Ch)
  1274  05B8  00F1               	movwf	((?_delay_us))+1
  1275  05B9  120A  118A  25A4   	fcall	_delay_us
              120A  118A         
  1276                           	line	51
  1277                           	
  1278  05BE                     l4941:	
  1279                           ;delay.c: 51: ms_count--;
  1280  05BE  3001               	movlw	low(01h)
  1281  05BF  02F2               	subwf	(delay_ms@ms_count),f
  1282  05C0  3000               	movlw	high(01h)
  1283  05C1  1C03               	skipc
  1284  05C2  03F3               	decf	(delay_ms@ms_count+1),f
  1285  05C3  02F3               	subwf	(delay_ms@ms_count+1),f
  1286  05C4  2DC5               	goto	l4943
  1287                           	line	52
  1288                           	
  1289  05C5                     l1384:	
  1290                           	line	48
  1291                           	
  1292  05C5                     l4943:	
  1293  05C5  0873               	movf	((delay_ms@ms_count+1)),w
  1294  05C6  0472               	iorwf	((delay_ms@ms_count)),w
  1295  05C7  1D03               	skipz
  1296  05C8  2DCA               	goto	u2411
  1297  05C9  2DCB               	goto	u2410
  1298  05CA                     u2411:
  1299  05CA  2DB5               	goto	l4939
  1300  05CB                     u2410:
  1301  05CB  2DCC               	goto	l1387
  1302                           	
  1303  05CC                     l1386:	
  1304                           	line	54
  1305                           	
  1306  05CC                     l1387:	
  1307  05CC  0008               	return
  1308                           	opt stack 0
  1309                           GLOBAL	__end_of_delay_ms
  1310  05CD                     	__end_of_delay_ms:
  1311 ;; =============== function _delay_ms ends ============
  1312                           
  1313                           	signat	_delay_ms,4216
  1314                           	global	_ADC_StartConversion
  1315                           psect	text174,local,class=CODE,delta=2
  1316                           global __ptext174
  1317  0682                     __ptext174:
  1318                           
  1319 ;; *************** function _ADC_StartConversion *****************
  1320 ;; Defined at:
  1321 ;;		line 41 in file "C:\Users\Xplore_labZ\Saved Games\Desktop\Sample_Programs_updated\Pic\Ultra_Pic\Adc\Single_Channel\a
       dc.c"
  1322 ;; Parameters:    Size  Location     Type
  1323 ;;  channel         1    wreg     unsigned char 
  1324 ;; Auto vars:     Size  Location     Type
  1325 ;;  channel         1    6[COMMON] unsigned char 
  1326 ;; Return value:  Size  Location     Type
  1327 ;;                  2    2[COMMON] unsigned int 
  1328 ;; Registers used:
  1329 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1330 ;; Tracked objects:
  1331 ;;		On entry : 0/0
  1332 ;;		On exit  : 0/0
  1333 ;;		Unchanged: 0/0
  1334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1335 ;;      Params:         2       0       0       0       0
  1336 ;;      Locals:         1       0       0       0       0
  1337 ;;      Temps:          2       0       0       0       0
  1338 ;;      Totals:         5       0       0       0       0
  1339 ;;Total ram usage:        5 bytes
  1340 ;; Hardware stack levels used:    1
  1341 ;; Hardware stack levels required when called:    1
  1342 ;; This function calls:
  1343 ;;		_delay_us
  1344 ;; This function is called by:
  1345 ;;		_main
  1346 ;; This function uses a non-reentrant model
  1347 ;;
  1348                           psect	text174
  1349                           	file	"C:\Users\Xplore_labZ\Saved Games\Desktop\Sample_Programs_updated\Pic\Ultra_Pic\Ad
                                 c\Single_Channel\adc.c"
  1350                           	line	41
  1351                           	global	__size_of_ADC_StartConversion
  1352  003E                     	__size_of_ADC_StartConversion	equ	__end_of_ADC_StartConversion-_ADC_StartConversion
  1353                           	
  1354  0682                     _ADC_StartConversion:	
  1355                           	opt	stack 6
  1356                           ; Regs used in _ADC_StartConversion: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1357                           ;ADC_StartConversion@channel stored from wreg
  1358  0682  00F6               	movwf	(ADC_StartConversion@channel)
  1359                           	line	42
  1360                           	
  1361  0683                     l4927:	
  1362                           ;adc.c: 42: ADCON0=((1<<ADON)|(channel<<3));
  1363  0683  0876               	movf	(ADC_StartConversion@channel),w
  1364  0684  00F4               	movwf	(??_ADC_StartConversion+0)+0
  1365  0685  3003               	movlw	03h
  1366  0686                     u2385:
  1367  0686  1003               	clrc
  1368  0687  0DF4               	rlf	(??_ADC_StartConversion+0)+0,f
  1369  0688  3EFF               	addlw	-1
  1370  0689  1D03               	skipz
  1371  068A  2E86               	goto	u2385
  1372  068B  3001               	movlw	(01h)
  1373  068C  00F5               	movwf	(??_ADC_StartConversion+1)+0
  1374  068D  3000               	movlw	0
  1375  068E  1283               	bcf	status, 5	;RP0=0, select bank0
  1376  068F  1303               	bcf	status, 6	;RP1=0, select bank0
  1377  0690  181F               	btfsc	(248/8),(248)&7
  1378  0691  3001               	movlw	1
  1379  0692  3E01               	addlw	1
  1380  0693  2E96               	goto	u2394
  1381  0694                     u2395:
  1382  0694  1003               	clrc
  1383  0695  0DF5               	rlf	(??_ADC_StartConversion+1)+0,f
  1384  0696                     u2394:
  1385  0696  3EFF               	addlw	-1
  1386  0697  1D03               	skipz
  1387  0698  2E94               	goto	u2395
  1388  0699  0875               	movf	0+(??_ADC_StartConversion+1)+0,w
  1389  069A  0474               	iorwf	0+(??_ADC_StartConversion+0)+0,w
  1390  069B  009F               	movwf	(31)	;volatile
  1391                           	line	43
  1392                           	
  1393  069C                     l4929:	
  1394                           ;adc.c: 43: delay_us(50);
  1395  069C  3032               	movlw	low(032h)
  1396  069D  00F0               	movwf	(?_delay_us)
  1397  069E  3000               	movlw	high(032h)
  1398  069F  00F1               	movwf	((?_delay_us))+1
  1399  06A0  120A  118A  25A4   	fcall	_delay_us
              120A  118A         
  1400                           	line	45
  1401                           	
  1402  06A5                     l4931:	
  1403                           ;adc.c: 45: GO=1;
  1404  06A5  1283               	bcf	status, 5	;RP0=0, select bank0
  1405  06A6  1303               	bcf	status, 6	;RP1=0, select bank0
  1406  06A7  151F               	bsf	(250/8),(250)&7
  1407                           	line	46
  1408                           ;adc.c: 46: while(GO==1);
  1409  06A8  2EA9               	goto	l690
  1410                           	
  1411  06A9                     l691:	
  1412                           	
  1413  06A9                     l690:	
  1414  06A9  191F               	btfsc	(250/8),(250)&7
  1415  06AA  2EAC               	goto	u2401
  1416  06AB  2EAD               	goto	u2400
  1417  06AC                     u2401:
  1418  06AC  2EA9               	goto	l690
  1419  06AD                     u2400:
  1420  06AD  2EAE               	goto	l4933
  1421                           	
  1422  06AE                     l692:	
  1423                           	line	48
  1424                           	
  1425  06AE                     l4933:	
  1426                           ;adc.c: 48: return((ADRESH<<8) + ADRESL);
  1427  06AE  081E               	movf	(30),w	;volatile
  1428  06AF  00F4               	movwf	(??_ADC_StartConversion+0)+0
  1429  06B0  01F5               	clrf	(??_ADC_StartConversion+0)+0+1
  1430  06B1  0874               	movf	(??_ADC_StartConversion+0)+0,w
  1431  06B2  00F5               	movwf	(??_ADC_StartConversion+0)+1
  1432  06B3  01F4               	clrf	(??_ADC_StartConversion+0)+0
  1433  06B4  1683               	bsf	status, 5	;RP0=1, select bank1
  1434  06B5  1303               	bcf	status, 6	;RP1=0, select bank1
  1435  06B6  081E               	movf	(158)^080h,w	;volatile
  1436  06B7  0774               	addwf	0+(??_ADC_StartConversion+0)+0,w
  1437  06B8  00F2               	movwf	(?_ADC_StartConversion)
  1438  06B9  3000               	movlw	0
  1439  06BA  1803               	skipnc
  1440  06BB  3001               	movlw	1
  1441  06BC  0775               	addwf	1+(??_ADC_StartConversion+0)+0,w
  1442  06BD  00F3               	movwf	1+(?_ADC_StartConversion)
  1443  06BE  2EBF               	goto	l693
  1444                           	
  1445  06BF                     l4935:	
  1446                           	line	49
  1447                           	
  1448  06BF                     l693:	
  1449  06BF  0008               	return
  1450                           	opt stack 0
  1451                           GLOBAL	__end_of_ADC_StartConversion
  1452  06C0                     	__end_of_ADC_StartConversion:
  1453 ;; =============== function _ADC_StartConversion ends ============
  1454                           
  1455                           	signat	_ADC_StartConversion,4218
  1456                           	global	___lwmod
  1457                           psect	text175,local,class=CODE,delta=2
  1458                           global __ptext175
  1459  06C0                     __ptext175:
  1460                           
  1461 ;; *************** function ___lwmod *****************
  1462 ;; Defined at:
  1463 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwmod.c"
  1464 ;; Parameters:    Size  Location     Type
  1465 ;;  divisor         2    0[COMMON] unsigned int 
  1466 ;;  dividend        2    2[COMMON] unsigned int 
  1467 ;; Auto vars:     Size  Location     Type
  1468 ;;  counter         1    5[COMMON] unsigned char 
  1469 ;; Return value:  Size  Location     Type
  1470 ;;                  2    0[COMMON] unsigned int 
  1471 ;; Registers used:
  1472 ;;		wreg, status,2, status,0
  1473 ;; Tracked objects:
  1474 ;;		On entry : 0/0
  1475 ;;		On exit  : 0/0
  1476 ;;		Unchanged: 0/0
  1477 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1478 ;;      Params:         4       0       0       0       0
  1479 ;;      Locals:         1       0       0       0       0
  1480 ;;      Temps:          1       0       0       0       0
  1481 ;;      Totals:         6       0       0       0       0
  1482 ;;Total ram usage:        6 bytes
  1483 ;; Hardware stack levels used:    1
  1484 ;; This function calls:
  1485 ;;		Nothing
  1486 ;; This function is called by:
  1487 ;;		_LCD_DisplayNumber
  1488 ;; This function uses a non-reentrant model
  1489 ;;
  1490                           psect	text175
  1491                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwmod.c"
  1492                           	line	5
  1493                           	global	__size_of___lwmod
  1494  0044                     	__size_of___lwmod	equ	__end_of___lwmod-___lwmod
  1495                           	
  1496  06C0                     ___lwmod:	
  1497                           	opt	stack 6
  1498                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1499                           	line	8
  1500                           	
  1501  06C0                     l4197:	
  1502  06C0  0871               	movf	(___lwmod@divisor+1),w
  1503  06C1  0470               	iorwf	(___lwmod@divisor),w
  1504  06C2  1903               	skipnz
  1505  06C3  2EC5               	goto	u381
  1506  06C4  2EC6               	goto	u380
  1507  06C5                     u381:
  1508  06C5  2EFC               	goto	l4215
  1509  06C6                     u380:
  1510                           	line	9
  1511                           	
  1512  06C6                     l4199:	
  1513  06C6  01F5               	clrf	(___lwmod@counter)
  1514  06C7  1403               	bsf	status,0
  1515  06C8  0DF5               	rlf	(___lwmod@counter),f
  1516                           	line	10
  1517  06C9  2ED6               	goto	l4205
  1518                           	
  1519  06CA                     l3533:	
  1520                           	line	11
  1521                           	
  1522  06CA                     l4201:	
  1523  06CA  3001               	movlw	01h
  1524                           	
  1525  06CB                     u395:
  1526  06CB  1003               	clrc
  1527  06CC  0DF0               	rlf	(___lwmod@divisor),f
  1528  06CD  0DF1               	rlf	(___lwmod@divisor+1),f
  1529  06CE  3EFF               	addlw	-1
  1530  06CF  1D03               	skipz
  1531  06D0  2ECB               	goto	u395
  1532                           	line	12
  1533                           	
  1534  06D1                     l4203:	
  1535  06D1  3001               	movlw	(01h)
  1536  06D2  00F4               	movwf	(??___lwmod+0)+0
  1537  06D3  0874               	movf	(??___lwmod+0)+0,w
  1538  06D4  07F5               	addwf	(___lwmod@counter),f
  1539  06D5  2ED6               	goto	l4205
  1540                           	line	13
  1541                           	
  1542  06D6                     l3532:	
  1543                           	line	10
  1544                           	
  1545  06D6                     l4205:	
  1546  06D6  1FF1               	btfss	(___lwmod@divisor+1),(15)&7
  1547  06D7  2ED9               	goto	u401
  1548  06D8  2EDA               	goto	u400
  1549  06D9                     u401:
  1550  06D9  2ECA               	goto	l4201
  1551  06DA                     u400:
  1552  06DA  2EDC               	goto	l4207
  1553                           	
  1554  06DB                     l3534:	
  1555  06DB  2EDC               	goto	l4207
  1556                           	line	14
  1557                           	
  1558  06DC                     l3535:	
  1559                           	line	15
  1560                           	
  1561  06DC                     l4207:	
  1562  06DC  0871               	movf	(___lwmod@divisor+1),w
  1563  06DD  0273               	subwf	(___lwmod@dividend+1),w
  1564  06DE  1D03               	skipz
  1565  06DF  2EE2               	goto	u415
  1566  06E0  0870               	movf	(___lwmod@divisor),w
  1567  06E1  0272               	subwf	(___lwmod@dividend),w
  1568  06E2                     u415:
  1569  06E2  1C03               	skipc
  1570  06E3  2EE5               	goto	u411
  1571  06E4  2EE6               	goto	u410
  1572  06E5                     u411:
  1573  06E5  2EED               	goto	l4211
  1574  06E6                     u410:
  1575                           	line	16
  1576                           	
  1577  06E6                     l4209:	
  1578  06E6  0870               	movf	(___lwmod@divisor),w
  1579  06E7  02F2               	subwf	(___lwmod@dividend),f
  1580  06E8  0871               	movf	(___lwmod@divisor+1),w
  1581  06E9  1C03               	skipc
  1582  06EA  03F3               	decf	(___lwmod@dividend+1),f
  1583  06EB  02F3               	subwf	(___lwmod@dividend+1),f
  1584  06EC  2EED               	goto	l4211
  1585                           	
  1586  06ED                     l3536:	
  1587                           	line	17
  1588                           	
  1589  06ED                     l4211:	
  1590  06ED  3001               	movlw	01h
  1591                           	
  1592  06EE                     u425:
  1593  06EE  1003               	clrc
  1594  06EF  0CF1               	rrf	(___lwmod@divisor+1),f
  1595  06F0  0CF0               	rrf	(___lwmod@divisor),f
  1596  06F1  3EFF               	addlw	-1
  1597  06F2  1D03               	skipz
  1598  06F3  2EEE               	goto	u425
  1599                           	line	18
  1600                           	
  1601  06F4                     l4213:	
  1602  06F4  3001               	movlw	low(01h)
  1603  06F5  02F5               	subwf	(___lwmod@counter),f
  1604  06F6  1D03               	btfss	status,2
  1605  06F7  2EF9               	goto	u431
  1606  06F8  2EFA               	goto	u430
  1607  06F9                     u431:
  1608  06F9  2EDC               	goto	l4207
  1609  06FA                     u430:
  1610  06FA  2EFC               	goto	l4215
  1611                           	
  1612  06FB                     l3537:	
  1613  06FB  2EFC               	goto	l4215
  1614                           	line	19
  1615                           	
  1616  06FC                     l3531:	
  1617                           	line	20
  1618                           	
  1619  06FC                     l4215:	
  1620  06FC  0873               	movf	(___lwmod@dividend+1),w
  1621  06FD  01F1               	clrf	(?___lwmod+1)
  1622  06FE  07F1               	addwf	(?___lwmod+1)
  1623  06FF  0872               	movf	(___lwmod@dividend),w
  1624  0700  01F0               	clrf	(?___lwmod)
  1625  0701  07F0               	addwf	(?___lwmod)
  1626                           
  1627  0702  2F03               	goto	l3538
  1628                           	
  1629  0703                     l4217:	
  1630                           	line	21
  1631                           	
  1632  0703                     l3538:	
  1633  0703  0008               	return
  1634                           	opt stack 0
  1635                           GLOBAL	__end_of___lwmod
  1636  0704                     	__end_of___lwmod:
  1637 ;; =============== function ___lwmod ends ============
  1638                           
  1639                           	signat	___lwmod,8314
  1640                           	global	___lwdiv
  1641                           psect	text176,local,class=CODE,delta=2
  1642                           global __ptext176
  1643  0704                     __ptext176:
  1644                           
  1645 ;; *************** function ___lwdiv *****************
  1646 ;; Defined at:
  1647 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwdiv.c"
  1648 ;; Parameters:    Size  Location     Type
  1649 ;;  divisor         2    0[COMMON] unsigned int 
  1650 ;;  dividend        2    2[COMMON] unsigned int 
  1651 ;; Auto vars:     Size  Location     Type
  1652 ;;  quotient        2    5[COMMON] unsigned int 
  1653 ;;  counter         1    7[COMMON] unsigned char 
  1654 ;; Return value:  Size  Location     Type
  1655 ;;                  2    0[COMMON] unsigned int 
  1656 ;; Registers used:
  1657 ;;		wreg, status,2, status,0
  1658 ;; Tracked objects:
  1659 ;;		On entry : 0/0
  1660 ;;		On exit  : 0/0
  1661 ;;		Unchanged: 0/0
  1662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1663 ;;      Params:         4       0       0       0       0
  1664 ;;      Locals:         3       0       0       0       0
  1665 ;;      Temps:          1       0       0       0       0
  1666 ;;      Totals:         8       0       0       0       0
  1667 ;;Total ram usage:        8 bytes
  1668 ;; Hardware stack levels used:    1
  1669 ;; This function calls:
  1670 ;;		Nothing
  1671 ;; This function is called by:
  1672 ;;		_LCD_DisplayNumber
  1673 ;; This function uses a non-reentrant model
  1674 ;;
  1675                           psect	text176
  1676                           	file	"C:\Program Files\HI-TECH Software\PICC\9.83\sources\lwdiv.c"
  1677                           	line	5
  1678                           	global	__size_of___lwdiv
  1679  004E                     	__size_of___lwdiv	equ	__end_of___lwdiv-___lwdiv
  1680                           	
  1681  0704                     ___lwdiv:	
  1682                           	opt	stack 6
  1683                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1684                           	line	9
  1685                           	
  1686  0704                     l4171:	
  1687  0704  01F5               	clrf	(___lwdiv@quotient)
  1688  0705  01F6               	clrf	(___lwdiv@quotient+1)
  1689                           	line	10
  1690                           	
  1691  0706                     l4173:	
  1692  0706  0871               	movf	(___lwdiv@divisor+1),w
  1693  0707  0470               	iorwf	(___lwdiv@divisor),w
  1694  0708  1903               	skipnz
  1695  0709  2F0B               	goto	u311
  1696  070A  2F0C               	goto	u310
  1697  070B                     u311:
  1698  070B  2F4A               	goto	l4193
  1699  070C                     u310:
  1700                           	line	11
  1701                           	
  1702  070C                     l4175:	
  1703  070C  01F7               	clrf	(___lwdiv@counter)
  1704  070D  1403               	bsf	status,0
  1705  070E  0DF7               	rlf	(___lwdiv@counter),f
  1706                           	line	12
  1707  070F  2F1C               	goto	l4181
  1708                           	
  1709  0710                     l3523:	
  1710                           	line	13
  1711                           	
  1712  0710                     l4177:	
  1713  0710  3001               	movlw	01h
  1714                           	
  1715  0711                     u325:
  1716  0711  1003               	clrc
  1717  0712  0DF0               	rlf	(___lwdiv@divisor),f
  1718  0713  0DF1               	rlf	(___lwdiv@divisor+1),f
  1719  0714  3EFF               	addlw	-1
  1720  0715  1D03               	skipz
  1721  0716  2F11               	goto	u325
  1722                           	line	14
  1723                           	
  1724  0717                     l4179:	
  1725  0717  3001               	movlw	(01h)
  1726  0718  00F4               	movwf	(??___lwdiv+0)+0
  1727  0719  0874               	movf	(??___lwdiv+0)+0,w
  1728  071A  07F7               	addwf	(___lwdiv@counter),f
  1729  071B  2F1C               	goto	l4181
  1730                           	line	15
  1731                           	
  1732  071C                     l3522:	
  1733                           	line	12
  1734                           	
  1735  071C                     l4181:	
  1736  071C  1FF1               	btfss	(___lwdiv@divisor+1),(15)&7
  1737  071D  2F1F               	goto	u331
  1738  071E  2F20               	goto	u330
  1739  071F                     u331:
  1740  071F  2F10               	goto	l4177
  1741  0720                     u330:
  1742  0720  2F22               	goto	l4183
  1743                           	
  1744  0721                     l3524:	
  1745  0721  2F22               	goto	l4183
  1746                           	line	16
  1747                           	
  1748  0722                     l3525:	
  1749                           	line	17
  1750                           	
  1751  0722                     l4183:	
  1752  0722  3001               	movlw	01h
  1753                           	
  1754  0723                     u345:
  1755  0723  1003               	clrc
  1756  0724  0DF5               	rlf	(___lwdiv@quotient),f
  1757  0725  0DF6               	rlf	(___lwdiv@quotient+1),f
  1758  0726  3EFF               	addlw	-1
  1759  0727  1D03               	skipz
  1760  0728  2F23               	goto	u345
  1761                           	line	18
  1762  0729  0871               	movf	(___lwdiv@divisor+1),w
  1763  072A  0273               	subwf	(___lwdiv@dividend+1),w
  1764  072B  1D03               	skipz
  1765  072C  2F2F               	goto	u355
  1766  072D  0870               	movf	(___lwdiv@divisor),w
  1767  072E  0272               	subwf	(___lwdiv@dividend),w
  1768  072F                     u355:
  1769  072F  1C03               	skipc
  1770  0730  2F32               	goto	u351
  1771  0731  2F33               	goto	u350
  1772  0732                     u351:
  1773  0732  2F3B               	goto	l4189
  1774  0733                     u350:
  1775                           	line	19
  1776                           	
  1777  0733                     l4185:	
  1778  0733  0870               	movf	(___lwdiv@divisor),w
  1779  0734  02F2               	subwf	(___lwdiv@dividend),f
  1780  0735  0871               	movf	(___lwdiv@divisor+1),w
  1781  0736  1C03               	skipc
  1782  0737  03F3               	decf	(___lwdiv@dividend+1),f
  1783  0738  02F3               	subwf	(___lwdiv@dividend+1),f
  1784                           	line	20
  1785                           	
  1786  0739                     l4187:	
  1787  0739  1475               	bsf	(___lwdiv@quotient)+(0/8),(0)&7
  1788  073A  2F3B               	goto	l4189
  1789                           	line	21
  1790                           	
  1791  073B                     l3526:	
  1792                           	line	22
  1793                           	
  1794  073B                     l4189:	
  1795  073B  3001               	movlw	01h
  1796                           	
  1797  073C                     u365:
  1798  073C  1003               	clrc
  1799  073D  0CF1               	rrf	(___lwdiv@divisor+1),f
  1800  073E  0CF0               	rrf	(___lwdiv@divisor),f
  1801  073F  3EFF               	addlw	-1
  1802  0740  1D03               	skipz
  1803  0741  2F3C               	goto	u365
  1804                           	line	23
  1805                           	
  1806  0742                     l4191:	
  1807  0742  3001               	movlw	low(01h)
  1808  0743  02F7               	subwf	(___lwdiv@counter),f
  1809  0744  1D03               	btfss	status,2
  1810  0745  2F47               	goto	u371
  1811  0746  2F48               	goto	u370
  1812  0747                     u371:
  1813  0747  2F22               	goto	l4183
  1814  0748                     u370:
  1815  0748  2F4A               	goto	l4193
  1816                           	
  1817  0749                     l3527:	
  1818  0749  2F4A               	goto	l4193
  1819                           	line	24
  1820                           	
  1821  074A                     l3521:	
  1822                           	line	25
  1823                           	
  1824  074A                     l4193:	
  1825  074A  0876               	movf	(___lwdiv@quotient+1),w
  1826  074B  01F1               	clrf	(?___lwdiv+1)
  1827  074C  07F1               	addwf	(?___lwdiv+1)
  1828  074D  0875               	movf	(___lwdiv@quotient),w
  1829  074E  01F0               	clrf	(?___lwdiv)
  1830  074F  07F0               	addwf	(?___lwdiv)
  1831                           
  1832  0750  2F51               	goto	l3528
  1833                           	
  1834  0751                     l4195:	
  1835                           	line	26
  1836                           	
  1837  0751                     l3528:	
  1838  0751  0008               	return
  1839                           	opt stack 0
  1840                           GLOBAL	__end_of___lwdiv
  1841  0752                     	__end_of___lwdiv:
  1842 ;; =============== function ___lwdiv ends ============
  1843                           
  1844                           	signat	___lwdiv,8314
  1845                           	global	_delay_us
  1846                           psect	text177,local,class=CODE,delta=2
  1847                           global __ptext177
  1848  05A4                     __ptext177:
  1849                           
  1850 ;; *************** function _delay_us *****************
  1851 ;; Defined at:
  1852 ;;		line 26 in file "C:\Users\Xplore_labZ\Saved Games\Desktop\Sample_Programs_updated\Pic\Ultra_Pic\Adc\Single_Channel\d
       elay.c"
  1853 ;; Parameters:    Size  Location     Type
  1854 ;;  us_count        2    0[COMMON] unsigned int 
  1855 ;; Auto vars:     Size  Location     Type
  1856 ;;		None
  1857 ;; Return value:  Size  Location     Type
  1858 ;;		None               void
  1859 ;; Registers used:
  1860 ;;		wreg, status,2, status,0
  1861 ;; Tracked objects:
  1862 ;;		On entry : 0/0
  1863 ;;		On exit  : 0/0
  1864 ;;		Unchanged: 0/0
  1865 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1866 ;;      Params:         2       0       0       0       0
  1867 ;;      Locals:         0       0       0       0       0
  1868 ;;      Temps:          0       0       0       0       0
  1869 ;;      Totals:         2       0       0       0       0
  1870 ;;Total ram usage:        2 bytes
  1871 ;; Hardware stack levels used:    1
  1872 ;; This function calls:
  1873 ;;		Nothing
  1874 ;; This function is called by:
  1875 ;;		_ADC_StartConversion
  1876 ;;		_delay_ms
  1877 ;;		_LCD_Init
  1878 ;;		_LCD_CmdWrite
  1879 ;;		_LCD_DataWrite
  1880 ;; This function uses a non-reentrant model
  1881 ;;
  1882                           psect	text177
  1883                           	file	"C:\Users\Xplore_labZ\Saved Games\Desktop\Sample_Programs_updated\Pic\Ultra_Pic\Ad
                                 c\Single_Channel\delay.c"
  1884                           	global	__size_of_delay_us
  1885  0010                     	__size_of_delay_us	equ	__end_of_delay_us-_delay_us
  1886                           	
  1887  05A4                     _delay_us:	
  1888                           	opt	stack 4
  1889                           ; Regs used in _delay_us: [wreg+status,2+status,0]
  1890                           	line	27
  1891                           	
  1892  05A4                     l3995:	
  1893                           ;delay.c: 27: while(us_count!=0)
  1894  05A4  2DAC               	goto	l3999
  1895                           	
  1896  05A5                     l1379:	
  1897                           	line	29
  1898                           	
  1899  05A5                     l3997:	
  1900                           ;delay.c: 28: {
  1901                           ;delay.c: 29: us_count--;
  1902  05A5  3001               	movlw	low(01h)
  1903  05A6  02F0               	subwf	(delay_us@us_count),f
  1904  05A7  3000               	movlw	high(01h)
  1905  05A8  1C03               	skipc
  1906  05A9  03F1               	decf	(delay_us@us_count+1),f
  1907  05AA  02F1               	subwf	(delay_us@us_count+1),f
  1908  05AB  2DAC               	goto	l3999
  1909                           	line	30
  1910                           	
  1911  05AC                     l1378:	
  1912                           	line	27
  1913                           	
  1914  05AC                     l3999:	
  1915  05AC  0871               	movf	((delay_us@us_count+1)),w
  1916  05AD  0470               	iorwf	((delay_us@us_count)),w
  1917  05AE  1D03               	skipz
  1918  05AF  2DB1               	goto	u11
  1919  05B0  2DB2               	goto	u10
  1920  05B1                     u11:
  1921  05B1  2DA5               	goto	l3997
  1922  05B2                     u10:
  1923  05B2  2DB3               	goto	l1381
  1924                           	
  1925  05B3                     l1380:	
  1926                           	line	31
  1927                           	
  1928  05B3                     l1381:	
  1929  05B3  0008               	return
  1930                           	opt stack 0
  1931                           GLOBAL	__end_of_delay_us
  1932  05B4                     	__end_of_delay_us:
  1933 ;; =============== function _delay_us ends ============
  1934                           
  1935                           	signat	_delay_us,4216
  1936                           	global	_ADC_Init
  1937                           psect	text178,local,class=CODE,delta=2
  1938                           global __ptext178
  1939  059C                     __ptext178:
  1940                           
  1941 ;; *************** function _ADC_Init *****************
  1942 ;; Defined at:
  1943 ;;		line 25 in file "C:\Users\Xplore_labZ\Saved Games\Desktop\Sample_Programs_updated\Pic\Ultra_Pic\Adc\Single_Channel\a
       dc.c"
  1944 ;; Parameters:    Size  Location     Type
  1945 ;;		None
  1946 ;; Auto vars:     Size  Location     Type
  1947 ;;		None
  1948 ;; Return value:  Size  Location     Type
  1949 ;;		None               void
  1950 ;; Registers used:
  1951 ;;		wreg, status,2
  1952 ;; Tracked objects:
  1953 ;;		On entry : 0/0
  1954 ;;		On exit  : 0/0
  1955 ;;		Unchanged: 0/0
  1956 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1957 ;;      Params:         0       0       0       0       0
  1958 ;;      Locals:         0       0       0       0       0
  1959 ;;      Temps:          0       0       0       0       0
  1960 ;;      Totals:         0       0       0       0       0
  1961 ;;Total ram usage:        0 bytes
  1962 ;; Hardware stack levels used:    1
  1963 ;; This function calls:
  1964 ;;		Nothing
  1965 ;; This function is called by:
  1966 ;;		_main
  1967 ;; This function uses a non-reentrant model
  1968 ;;
  1969                           psect	text178
  1970                           	file	"C:\Users\Xplore_labZ\Saved Games\Desktop\Sample_Programs_updated\Pic\Ultra_Pic\Ad
                                 c\Single_Channel\adc.c"
  1971                           	line	25
  1972                           	global	__size_of_ADC_Init
  1973  0008                     	__size_of_ADC_Init	equ	__end_of_ADC_Init-_ADC_Init
  1974                           	
  1975  059C                     _ADC_Init:	
  1976                           	opt	stack 7
  1977                           ; Regs used in _ADC_Init: [wreg+status,2]
  1978                           	line	26
  1979                           	
  1980  059C                     l3991:	
  1981                           ;adc.c: 26: ADCON0=0x00;
  1982  059C  1283               	bcf	status, 5	;RP0=0, select bank0
  1983  059D  1303               	bcf	status, 6	;RP1=0, select bank0
  1984  059E  019F               	clrf	(31)	;volatile
  1985                           	line	27
  1986                           	
  1987  059F                     l3993:	
  1988                           ;adc.c: 27: ADCON1=0x80;
  1989  059F  3080               	movlw	(080h)
  1990  05A0  1683               	bsf	status, 5	;RP0=1, select bank1
  1991  05A1  1303               	bcf	status, 6	;RP1=0, select bank1
  1992  05A2  009F               	movwf	(159)^080h	;volatile
  1993                           	line	28
  1994                           	
  1995  05A3                     l687:	
  1996  05A3  0008               	return
  1997                           	opt stack 0
  1998                           GLOBAL	__end_of_ADC_Init
  1999  05A4                     	__end_of_ADC_Init:
  2000 ;; =============== function _ADC_Init ends ============
  2001                           
  2002                           	signat	_ADC_Init,88
  2003                           psect	text179,local,class=CODE,delta=2
  2004                           global __ptext179
  2005  0000                     __ptext179:
  2006                           	global	btemp
  2007  007E                     	btemp set 07Eh
  2008                           
  2009                           	DABS	1,126,2	;btemp
  2010                           	global	wtemp0
  2011  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Mon Dec 24 21:14:39 2012

                           pc 0002                 ?_LCD_CmdWrite 0070                            _GO 00FA  
                          _RD 0C60                            u10 05B2                            u11 05B1  
                          _WR 0C61                            fsr 0004                ?_LCD_DataWrite 0070  
                         l690 06A9                           l691 06A9                           l692 06AE  
                         l693 06BF                           l687 05A3                           _GIE 005F  
                         _RD0 0040                           _RD1 0041                           _RD2 0042  
                         u310 070C                           u311 070B                           u400 06DA  
                         u401 06D9                           u330 0720                           u410 06E6  
                         u331 071F                           u411 06E5                           u325 0711  
                         u350 0733                           u430 06FA                           u351 0732  
                         u431 06F9                           u415 06E2                           u345 0723  
                         u425 06EE                           u370 0748                           u371 0747  
                         u355 072F                           u380 06C6                           u365 073C  
                         u381 06C5                           u395 06CB                           fsr0 0004  
                        l2101 05EA                          l2110 0629                          l2104 0608  
                        l2113 07FF                          l2107 061C                          l2108 060B  
                        l2109 0629                          l1380 05B3                          l2084 064F  
                        l1381 05B3                          l2093 059B                          l1384 05C5  
                        l4201 06CA                          l1385 05B5                          l1378 05AC  
                        l1386 05CC                          l1379 05A5                          l4211 06ED  
                        l4203 06D1                          l1387 05CC                          l4213 06F4  
                        l4205 06D6                          l4207 06DC                          l4215 06FC  
                        l3521 074A                          l4217 0703                          l4209 06E6  
                        l3522 071C                          l3523 0710                          l4171 0704  
                        l3531 06FC                          l3524 0721                          l3532 06D6  
                        l3525 0722                          l4181 071C                          l4173 0706  
                        l3533 06CA                          l3526 073B                          l3534 06DB  
                        l2830 067E                          l3527 0749                          l4191 0742  
                        l4183 0722                          l4175 070C                          l3535 06DC  
                        l2831 067F                          l3528 0751                          l3536 06ED  
                        l2832 067F                          l4185 0733                          l4177 0710  
                        l4193 074A                          l3537 06FB                          l3538 0703  
                        l4195 0751                          l4187 0739                          l4179 0717  
                        l4189 073B                          l4197 06C0                          l2829 0661  
                        l4199 06C6                          l4931 06A5                          l4933 06AE  
                        l4941 05BE                          l3991 059C                          l4935 06BF  
                        l4927 0683                          l4943 05C5                          l4951 05D4  
                        l3993 059F                          l4929 069C                          l4937 05B4  
                        l4953 05D5                          l4945 05CE                          l4961 05F0  
                        l3995 05A4                          l4939 05B5                          l4955 05DE  
                        l4947 05D2                          l4971 05FF                          l4963 05F1  
                        l3997 05A5                          l4957 05E1                          l4949 05D3  
                        l4965 05F2                          l4973 062A                          l4981 060A  
                        l3999 05AC                          l4967 05F3                          l4959 05EC  
                        l4975 0633                          l4983 060B                          l4991 0650  
                        l4969 05FC                          l4977 0636                          l4985 0617  
                        l4993 065A                          l4979 0595                          l4987 061C  
                        l4995 0661                          l4989 0752                          l4997 066D  
                        l4999 0672                          _ADON 00F8                          STR_1 0009  
                        u2400 06AD                          u2401 06AC                          u2410 05CB  
                        u2411 05CA                          u2420 0628                          u2421 0627  
                        u2385 0686                          u2394 0696                          u2395 0694  
                        _WREN 0C62                          _main 0650                          btemp 007E  
            __end_of_ADC_Init 05A4                          start 0000                ??_LCD_CmdWrite 0074  
            __end_of_LCD_Init 0650                         ?_main 0070                         _EEADR 010D  
                       _CARRY 0018               __end_of___lwdiv 0752               __end_of___lwmod 0704  
                       _PORTB 0006                         _TRISB 0086                         _TRISD 0088  
            ?_LCD_GoToLineTwo 0070                         pclath 000A                         status 0003  
                       wtemp0 007E                  __end_of_main 0682               ??_LCD_DataWrite 0074  
                      ??_main 007A    ADC_StartConversion@channel 0076                        _ADCON0 001F  
                      _ADCON1 009F                        _ADRESH 001E                        _ADRESL 009E  
                      _EEDATA 010C                        _EECON1 018C                        _EECON2 018D  
            __end_of_delay_ms 05CD              __end_of_delay_us 05B4                     ??___lwdiv 0074  
                   ??___lwmod 0074                     ?_ADC_Init 0070          __end_of_LCD_CmdWrite 05EB  
              main@adc_result 007A                     ?_LCD_Init 0070  __size_of_ADC_StartConversion 003E  
              __pcstackCOMMON 0070                    ??_ADC_Init 0070                    ??_LCD_Init 0075  
                  __pmaintext 0650                     ?_delay_ms 0072                     ?_delay_us 0070  
            delay_ms@ms_count 0072                       ___lwdiv 0704                       ___lwmod 06C0  
            LCD_DataWrite@dat 0074         __size_of_LCD_CmdWrite 001E                    ??_delay_ms 0074  
                  ??_delay_us 0072          end_of_initialization 0591      __size_of_LCD_GoToLineTwo 0007  
                _LCD_CmdWrite 05CD         __end_of_LCD_DataWrite 0609           _ADC_StartConversion 0682  
           __size_of_ADC_Init 0008             __size_of_LCD_Init 0026          ?_ADC_StartConversion 0072  
            delay_us@us_count 0070           start_initialization 0591         ??_ADC_StartConversion 0074  
           ??_LCD_GoToLineTwo 0075             __size_of_delay_ms 0019             __size_of_delay_us 0010  
            ___lwdiv@dividend 0072          LCD_DisplayNumber@num 0078                     __ptext170 062A  
                   __ptext171 05EB                     __ptext172 05CD                     __ptext173 05B4  
                   __ptext174 0682                     __ptext166 0000                     __ptext175 06C0  
                   __ptext167 0752                     __ptext176 0704                     __ptext168 0609  
                   __ptext177 05A4                     __ptext169 0595                     __ptext178 059C  
                   __ptext179 0000                      ?___lwdiv 0070                      ?___lwmod 0070  
 LCD_DisplayString@string_ptr 0076                     __pstrings 0003             _LCD_DisplayNumber 0752  
                    _ADC_Init 059C             _LCD_DisplayString 0609            ?_LCD_DisplayNumber 0078  
            ___lwdiv@quotient 0075            ?_LCD_DisplayString 0070           ??_LCD_DisplayNumber 007A  
                    _LCD_Init 062A           ??_LCD_DisplayString 0075               LCD_CmdWrite@cmd 0074  
   __end_of_LCD_DisplayNumber 0800                   __stringbase 0008     __end_of_LCD_DisplayString 062A  
            __size_of___lwdiv 004E              __size_of___lwmod 0044                      _delay_ms 05B4  
                    _delay_us 05A4               ___lwdiv@divisor 0070               ___lwdiv@counter 0077  
               __size_of_main 0032        __size_of_LCD_DataWrite 001E               _LCD_GoToLineTwo 0595  
  __size_of_LCD_DisplayNumber 00AE    __size_of_LCD_DisplayString 0021   __end_of_ADC_StartConversion 06C0  
            ___lwmod@dividend 0072                     stringcode 0003                 _LCD_DataWrite 05EB  
             ___lwmod@divisor 0070               ___lwmod@counter 0075                      stringdir 0003  
                    stringtab 0003       __end_of_LCD_GoToLineTwo 059C  
