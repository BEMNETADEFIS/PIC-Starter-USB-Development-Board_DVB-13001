

HI-TECH Software PIC LITE Macro Assembler V9.83 build 10920 
                                                                                               Wed Jun 04 12:00:27 2014

HI-TECH Software Omniscient Code Generator (Lite mode) build 10920
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 10920"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F877A
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           	FNCALL	_main,_LCD_Init
    43                           	FNCALL	_main,_LCD_DisplayString
    44                           	FNCALL	_main,_LCD_GoToLineTwo
    45                           	FNCALL	_LCD_DisplayString,_LCD_DataWrite
    46                           	FNCALL	_LCD_GoToLineTwo,_LCD_CmdWrite
    47                           	FNCALL	_LCD_Init,_delay_us
    48                           	FNCALL	_LCD_Init,_LCD_CmdWrite
    49                           	FNCALL	_LCD_DataWrite,_delay_us
    50                           	FNCALL	_LCD_DataWrite,_delay_ms
    51                           	FNCALL	_LCD_CmdWrite,_delay_us
    52                           	FNCALL	_LCD_CmdWrite,_delay_ms
    53                           	FNCALL	_delay_ms,_delay_us
    54                           	FNROOT	_main
    55                           	global	_PORTB
    56                           psect	text127,local,class=CODE,delta=2
    57                           global __ptext127
    58  0000                     __ptext127:
    59  0006                     _PORTB	set	6
    60                           	global	_CARRY
    61  0018                     _CARRY	set	24
    62                           	global	_GIE
    63  005F                     _GIE	set	95
    64                           	global	_RB1
    65  0031                     _RB1	set	49
    66                           	global	_RB2
    67  0032                     _RB2	set	50
    68                           	global	_RB3
    69  0033                     _RB3	set	51
    70                           	global	_TRISB
    71  0086                     _TRISB	set	134
    72                           	global	_EEADR
    73  010D                     _EEADR	set	269
    74                           	global	_EEDATA
    75  010C                     _EEDATA	set	268
    76                           	global	_EECON1
    77  018C                     _EECON1	set	396
    78                           	global	_EECON2
    79  018D                     _EECON2	set	397
    80                           	global	_RD
    81  0C60                     _RD	set	3168
    82                           	global	_WR
    83  0C61                     _WR	set	3169
    84                           	global	_WREN
    85  0C62                     _WREN	set	3170
    86                           psect	strings,class=STRING,delta=2
    87                           global __pstrings
    88  0003                     __pstrings:
    89                           ;	global	stringdir,stringtab,__stringbase
    90  0003                     stringtab:
    91                           ;	String table - string pointers are 1 byte each
    92  0003                     stringcode:stringdir:
      + 0003                     stringdir:	
    93  0003  3000               movlw high(stringdir)
    94  0004  008A               movwf pclath
    95  0005  0804               movf fsr,w
    96  0006  0A84               incf fsr
    97  0007  0782               	addwf pc
    98  0008                     __stringbase:
    99  0008  3400               	retlw	0
   100                           psect	strings
   101                           	
   102  0009                     STR_2:	
   103  0009  344C               	retlw	76	;'L'
   104  000A  3465               	retlw	101	;'e'
   105  000B  3474               	retlw	116	;'t'
   106  000C  3427               	retlw	39	;'''
   107  000D  3473               	retlw	115	;'s'
   108  000E  3420               	retlw	32	;' '
   109  000F  3462               	retlw	98	;'b'
   110  0010  3475               	retlw	117	;'u'
   111  0011  3469               	retlw	105	;'i'
   112  0012  346C               	retlw	108	;'l'
   113  0013  3464               	retlw	100	;'d'
   114  0014  342E               	retlw	46	;'.'
   115  0015  3420               	retlw	32	;' '
   116  0016  342E               	retlw	46	;'.'
   117  0017  3420               	retlw	32	;' '
   118  0018  342E               	retlw	46	;'.'
   119  0019  3400               	retlw	0
   120                           psect	strings
   121                           	
   122  001A                     STR_1:	
   123  001A  3458               	retlw	88	;'X'
   124  001B  3470               	retlw	112	;'p'
   125  001C  346C               	retlw	108	;'l'
   126  001D  346F               	retlw	111	;'o'
   127  001E  3472               	retlw	114	;'r'
   128  001F  3465               	retlw	101	;'e'
   129  0020  3420               	retlw	32	;' '
   130  0021  344C               	retlw	76	;'L'
   131  0022  3461               	retlw	97	;'a'
   132  0023  3462               	retlw	98	;'b'
   133  0024  347A               	retlw	122	;'z'
   134  0025  3400               	retlw	0
   135                           psect	strings
   136                           	file	"Lcd_Display.as"
   137                           	line	#
   138                           psect cinit,class=CODE,delta=2
   139                           global start_initialization
   140  06DB                     start_initialization:
   141                           
   142                           psect cinit,class=CODE,delta=2
   143                           global end_of_initialization
   144                           
   145                           ;End of C runtime variable initialization code
   146                           
   147  06DB                     end_of_initialization:
   148  06DB  0183               clrf status
   149  06DC  120A  118A  2F0F   ljmp _main	;jump to C main() function
   150                           psect	cstackCOMMON,class=COMMON,space=1
   151                           global __pcstackCOMMON
   152  0070                     __pcstackCOMMON:
   153                           	global	?_LCD_CmdWrite
   154  0070                     ?_LCD_CmdWrite:	; 0 bytes @ 0x0
   155                           	global	?_delay_us
   156  0070                     ?_delay_us:	; 0 bytes @ 0x0
   157                           	global	?_LCD_Init
   158  0070                     ?_LCD_Init:	; 0 bytes @ 0x0
   159                           	global	?_LCD_GoToLineTwo
   160  0070                     ?_LCD_GoToLineTwo:	; 0 bytes @ 0x0
   161                           	global	?_LCD_DataWrite
   162  0070                     ?_LCD_DataWrite:	; 0 bytes @ 0x0
   163                           	global	?_LCD_DisplayString
   164  0070                     ?_LCD_DisplayString:	; 0 bytes @ 0x0
   165                           	global	?_main
   166  0070                     ?_main:	; 0 bytes @ 0x0
   167                           	global	delay_us@us_count
   168  0070                     delay_us@us_count:	; 2 bytes @ 0x0
   169  0070                     	ds	2
   170                           	global	??_delay_us
   171  0072                     ??_delay_us:	; 0 bytes @ 0x2
   172                           	global	?_delay_ms
   173  0072                     ?_delay_ms:	; 0 bytes @ 0x2
   174                           	global	delay_ms@ms_count
   175  0072                     delay_ms@ms_count:	; 2 bytes @ 0x2
   176  0072                     	ds	2
   177                           	global	??_LCD_CmdWrite
   178  0074                     ??_LCD_CmdWrite:	; 0 bytes @ 0x4
   179                           	global	??_delay_ms
   180  0074                     ??_delay_ms:	; 0 bytes @ 0x4
   181                           	global	??_LCD_DataWrite
   182  0074                     ??_LCD_DataWrite:	; 0 bytes @ 0x4
   183  0074                     	ds	1
   184                           	global	LCD_CmdWrite@cmd
   185  0075                     LCD_CmdWrite@cmd:	; 1 bytes @ 0x5
   186                           	global	LCD_DataWrite@dat
   187  0075                     LCD_DataWrite@dat:	; 1 bytes @ 0x5
   188  0075                     	ds	1
   189                           	global	??_LCD_Init
   190  0076                     ??_LCD_Init:	; 0 bytes @ 0x6
   191                           	global	??_LCD_GoToLineTwo
   192  0076                     ??_LCD_GoToLineTwo:	; 0 bytes @ 0x6
   193                           	global	??_LCD_DisplayString
   194  0076                     ??_LCD_DisplayString:	; 0 bytes @ 0x6
   195  0076                     	ds	1
   196                           	global	LCD_DisplayString@string_ptr
   197  0077                     LCD_DisplayString@string_ptr:	; 1 bytes @ 0x7
   198  0077                     	ds	1
   199                           	global	??_main
   200  0078                     ??_main:	; 0 bytes @ 0x8
   201 ;;Data sizes: Strings 29, constant 0, data 0, bss 0, persistent 0 stack 0
   202 ;;Auto spaces:   Size  Autos    Used
   203 ;; COMMON          14      8       8
   204 ;; BANK0           80      0       0
   205 ;; BANK1           80      0       0
   206 ;; BANK3           96      0       0
   207 ;; BANK2           96      0       0
   208                           
   209 ;;
   210 ;; Pointer list with targets:
   211                           
   212 ;; LCD_DisplayString@string_ptr	PTR unsigned char  size(1) Largest target is 17
   213 ;;		 -> STR_2(CODE[17]), STR_1(CODE[12]), 
   214 ;;
   215                           
   216                           
   217 ;;
   218 ;; Critical Paths under _main in COMMON
   219 ;;
   220 ;;   _main->_LCD_DisplayString
   221 ;;   _LCD_DisplayString->_LCD_DataWrite
   222 ;;   _LCD_GoToLineTwo->_LCD_CmdWrite
   223 ;;   _LCD_Init->_LCD_CmdWrite
   224 ;;   _LCD_DataWrite->_delay_ms
   225 ;;   _LCD_CmdWrite->_delay_ms
   226 ;;   _delay_ms->_delay_us
   227 ;;
   228 ;; Critical Paths under _main in BANK0
   229 ;;
   230 ;;   None.
   231 ;;
   232 ;; Critical Paths under _main in BANK1
   233 ;;
   234 ;;   None.
   235 ;;
   236 ;; Critical Paths under _main in BANK3
   237 ;;
   238 ;;   None.
   239 ;;
   240 ;; Critical Paths under _main in BANK2
   241 ;;
   242 ;;   None.
   243                           
   244 ;;
   245 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   246 ;;
   247                           
   248 ;;
   249 ;;Call Graph Tables:
   250 ;;
   251 ;; ---------------------------------------------------------------------------------
   252 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   253 ;; ---------------------------------------------------------------------------------
   254 ;; (0) _main                                                 0     0      0     270
   255 ;;                           _LCD_Init
   256 ;;                  _LCD_DisplayString
   257 ;;                    _LCD_GoToLineTwo
   258 ;; ---------------------------------------------------------------------------------
   259 ;; (1) _LCD_DisplayString                                    2     2      0     105
   260 ;;                                              6 COMMON     2     2      0
   261 ;;                      _LCD_DataWrite
   262 ;; ---------------------------------------------------------------------------------
   263 ;; (1) _LCD_GoToLineTwo                                      0     0      0      75
   264 ;;                       _LCD_CmdWrite
   265 ;; ---------------------------------------------------------------------------------
   266 ;; (1) _LCD_Init                                             0     0      0      90
   267 ;;                           _delay_us
   268 ;;                       _LCD_CmdWrite
   269 ;; ---------------------------------------------------------------------------------
   270 ;; (2) _LCD_DataWrite                                        2     2      0      75
   271 ;;                                              4 COMMON     2     2      0
   272 ;;                           _delay_us
   273 ;;                           _delay_ms
   274 ;; ---------------------------------------------------------------------------------
   275 ;; (2) _LCD_CmdWrite                                         2     2      0      75
   276 ;;                                              4 COMMON     2     2      0
   277 ;;                           _delay_us
   278 ;;                           _delay_ms
   279 ;; ---------------------------------------------------------------------------------
   280 ;; (3) _delay_ms                                             2     0      2      30
   281 ;;                                              2 COMMON     2     0      2
   282 ;;                           _delay_us
   283 ;; ---------------------------------------------------------------------------------
   284 ;; (4) _delay_us                                             2     0      2      15
   285 ;;                                              0 COMMON     2     0      2
   286 ;; ---------------------------------------------------------------------------------
   287 ;; Estimated maximum stack depth 4
   288 ;; ---------------------------------------------------------------------------------
   289                           
   290 ;; Call Graph Graphs:
   291                           
   292 ;; _main (ROOT)
   293 ;;   _LCD_Init
   294 ;;     _delay_us
   295 ;;     _LCD_CmdWrite
   296 ;;       _delay_us
   297 ;;       _delay_ms
   298 ;;         _delay_us
   299 ;;   _LCD_DisplayString
   300 ;;     _LCD_DataWrite
   301 ;;       _delay_us
   302 ;;       _delay_ms
   303 ;;         _delay_us
   304 ;;   _LCD_GoToLineTwo
   305 ;;     _LCD_CmdWrite
   306 ;;       _delay_us
   307 ;;       _delay_ms
   308 ;;         _delay_us
   309 ;;
   310                           
   311 ;; Address spaces:
   312                           
   313 ;;Name               Size   Autos  Total    Cost      Usage
   314 ;;BITCOMMON            E      0       0       0        0.0%
   315 ;;EEDATA             100      0       0       0        0.0%
   316 ;;NULL                 0      0       0       0        0.0%
   317 ;;CODE                 0      0       0       0        0.0%
   318 ;;COMMON               E      8       8       1       57.1%
   319 ;;BITSFR0              0      0       0       1        0.0%
   320 ;;SFR0                 0      0       0       1        0.0%
   321 ;;BITSFR1              0      0       0       2        0.0%
   322 ;;SFR1                 0      0       0       2        0.0%
   323 ;;STACK                0      0       4       2        0.0%
   324 ;;ABS                  0      0       0       3        0.0%
   325 ;;BITBANK0            50      0       0       4        0.0%
   326 ;;BITSFR3              0      0       0       4        0.0%
   327 ;;SFR3                 0      0       0       4        0.0%
   328 ;;BANK0               50      0       0       5        0.0%
   329 ;;BITSFR2              0      0       0       5        0.0%
   330 ;;SFR2                 0      0       0       5        0.0%
   331 ;;BITBANK1            50      0       0       6        0.0%
   332 ;;BANK1               50      0       0       7        0.0%
   333 ;;BITBANK3            60      0       0       8        0.0%
   334 ;;BANK3               60      0       0       9        0.0%
   335 ;;BITBANK2            60      0       0      10        0.0%
   336 ;;BANK2               60      0       0      11        0.0%
   337 ;;DATA                 0      0       0      12        0.0%
   338                           
   339                           	global	_main
   340                           psect	maintext,global,class=CODE,delta=2
   341                           global __pmaintext
   342  070F                     __pmaintext:
   343                           
   344 ;; *************** function _main *****************
   345 ;; Defined at:
   346 ;;		line 18 in file "G:\work_space\Sample_Programs_updated\Pic\Pro_Pic _USB\Lcd\Lcd_4_bit\Lcd_Display\main.c"
   347 ;; Parameters:    Size  Location     Type
   348 ;;		None
   349 ;; Auto vars:     Size  Location     Type
   350 ;;		None
   351 ;; Return value:  Size  Location     Type
   352 ;;		None               void
   353 ;; Registers used:
   354 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   355 ;; Tracked objects:
   356 ;;		On entry : 17F/0
   357 ;;		On exit  : 0/0
   358 ;;		Unchanged: 0/0
   359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   360 ;;      Params:         0       0       0       0       0
   361 ;;      Locals:         0       0       0       0       0
   362 ;;      Temps:          0       0       0       0       0
   363 ;;      Totals:         0       0       0       0       0
   364 ;;Total ram usage:        0 bytes
   365 ;; Hardware stack levels required when called:    4
   366 ;; This function calls:
   367 ;;		_LCD_Init
   368 ;;		_LCD_DisplayString
   369 ;;		_LCD_GoToLineTwo
   370 ;; This function is called by:
   371 ;;		Startup code after reset
   372 ;; This function uses a non-reentrant model
   373 ;;
   374                           psect	maintext
   375                           	file	"G:\work_space\Sample_Programs_updated\Pic\Pro_Pic _USB\Lcd\Lcd_4_bit\Lcd_Display\
                                 main.c"
   376                           	line	18
   377                           	global	__size_of_main
   378  001B                     	__size_of_main	equ	__end_of_main-_main
   379                           	
   380  070F                     _main:	
   381                           	opt	stack 4
   382                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   383                           	line	21
   384                           	
   385  070F                     l4310:	
   386                           ;main.c: 21: LCD_Init();
   387  070F  120A  118A  274B   	fcall	_LCD_Init
              120A  118A         
   388                           	line	24
   389                           	
   390  0714                     l4312:	
   391                           ;main.c: 24: LCD_DisplayString("Xplore Labz");
   392  0714  3012               	movlw	((STR_1-__stringbase))&0ffh
   393  0715  120A  118A  272A   	fcall	_LCD_DisplayString
              120A  118A         
   394                           	line	27
   395                           	
   396  071A                     l4314:	
   397                           ;main.c: 27: LCD_GoToLineTwo();
   398  071A  120A  118A  26DF   	fcall	_LCD_GoToLineTwo
              120A  118A         
   399                           	line	28
   400                           ;main.c: 28: LCD_DisplayString("Let's build. . .");
   401  071F  3001               	movlw	((STR_2-__stringbase))&0ffh
   402  0720  120A  118A  272A   	fcall	_LCD_DisplayString
              120A  118A         
   403  0725  2F26               	goto	l2131
   404                           	line	31
   405                           ;main.c: 31: while(1);
   406                           	
   407  0726                     l2130:	
   408                           	
   409  0726                     l2131:	
   410  0726  2F26               	goto	l2131
   411                           	
   412  0727                     l2132:	
   413                           	line	33
   414                           	
   415  0727                     l2133:	
   416                           	global	start
   417  0727  120A  118A  2800   	ljmp	start
   418                           	opt stack 0
   419                           GLOBAL	__end_of_main
   420  072A                     	__end_of_main:
   421 ;; =============== function _main ends ============
   422                           
   423                           	signat	_main,88
   424                           	global	_LCD_DisplayString
   425                           psect	text128,local,class=CODE,delta=2
   426                           global __ptext128
   427  072A                     __ptext128:
   428                           
   429 ;; *************** function _LCD_DisplayString *****************
   430 ;; Defined at:
   431 ;;		line 285 in file "G:\work_space\Sample_Programs_updated\Pic\Pro_Pic _USB\Lcd\Lcd_4_bit\Lcd_Display\lcd_4_bit.c"
   432 ;; Parameters:    Size  Location     Type
   433 ;;  string_ptr      1    wreg     PTR unsigned char 
   434 ;;		 -> STR_2(17), STR_1(12), 
   435 ;; Auto vars:     Size  Location     Type
   436 ;;  string_ptr      1    7[COMMON] PTR unsigned char 
   437 ;;		 -> STR_2(17), STR_1(12), 
   438 ;; Return value:  Size  Location     Type
   439 ;;		None               void
   440 ;; Registers used:
   441 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   442 ;; Tracked objects:
   443 ;;		On entry : 0/0
   444 ;;		On exit  : 0/0
   445 ;;		Unchanged: 0/0
   446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   447 ;;      Params:         0       0       0       0       0
   448 ;;      Locals:         1       0       0       0       0
   449 ;;      Temps:          1       0       0       0       0
   450 ;;      Totals:         2       0       0       0       0
   451 ;;Total ram usage:        2 bytes
   452 ;; Hardware stack levels used:    1
   453 ;; Hardware stack levels required when called:    3
   454 ;; This function calls:
   455 ;;		_LCD_DataWrite
   456 ;; This function is called by:
   457 ;;		_main
   458 ;; This function uses a non-reentrant model
   459 ;;
   460                           psect	text128
   461                           	file	"G:\work_space\Sample_Programs_updated\Pic\Pro_Pic _USB\Lcd\Lcd_4_bit\Lcd_Display\
                                 lcd_4_bit.c"
   462                           	line	285
   463                           	global	__size_of_LCD_DisplayString
   464  0021                     	__size_of_LCD_DisplayString	equ	__end_of_LCD_DisplayString-_LCD_DisplayString
   465                           	
   466  072A                     _LCD_DisplayString:	
   467                           	opt	stack 4
   468                           ; Regs used in _LCD_DisplayString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   469                           ;LCD_DisplayString@string_ptr stored from wreg
   470  072A  00F7               	movwf	(LCD_DisplayString@string_ptr)
   471                           	line	286
   472                           	
   473  072B                     l4302:	
   474                           ;lcd_4_bit.c: 286: while(*string_ptr)
   475  072B  2F3D               	goto	l4308
   476                           	
   477  072C                     l1415:	
   478                           	line	287
   479                           	
   480  072C                     l4304:	
   481                           ;lcd_4_bit.c: 287: LCD_DataWrite(*string_ptr++);
   482  072C  0877               	movf	(LCD_DisplayString@string_ptr),w
   483  072D  0084               	movwf	fsr0
   484  072E  120A  118A  2003   	fcall	stringdir
              120A  118A         
   485  0733  120A  118A  27BB   	fcall	_LCD_DataWrite
              120A  118A         
   486                           	
   487  0738                     l4306:	
   488  0738  3001               	movlw	(01h)
   489  0739  00F6               	movwf	(??_LCD_DisplayString+0)+0
   490  073A  0876               	movf	(??_LCD_DisplayString+0)+0,w
   491  073B  07F7               	addwf	(LCD_DisplayString@string_ptr),f
   492  073C  2F3D               	goto	l4308
   493                           	
   494  073D                     l1414:	
   495                           	line	286
   496                           	
   497  073D                     l4308:	
   498  073D  0877               	movf	(LCD_DisplayString@string_ptr),w
   499  073E  0084               	movwf	fsr0
   500  073F  120A  118A  2003   	fcall	stringdir
              120A  118A         
   501  0744  3800               	iorlw	0
   502  0745  1D03               	skipz
   503  0746  2F48               	goto	u2411
   504  0747  2F49               	goto	u2410
   505  0748                     u2411:
   506  0748  2F2C               	goto	l4304
   507  0749                     u2410:
   508  0749  2F4A               	goto	l1417
   509                           	
   510  074A                     l1416:	
   511                           	line	288
   512                           	
   513  074A                     l1417:	
   514  074A  0008               	return
   515                           	opt stack 0
   516                           GLOBAL	__end_of_LCD_DisplayString
   517  074B                     	__end_of_LCD_DisplayString:
   518 ;; =============== function _LCD_DisplayString ends ============
   519                           
   520                           	signat	_LCD_DisplayString,4216
   521                           	global	_LCD_GoToLineTwo
   522                           psect	text129,local,class=CODE,delta=2
   523                           global __ptext129
   524  06DF                     __ptext129:
   525                           
   526 ;; *************** function _LCD_GoToLineTwo *****************
   527 ;; Defined at:
   528 ;;		line 133 in file "G:\work_space\Sample_Programs_updated\Pic\Pro_Pic _USB\Lcd\Lcd_4_bit\Lcd_Display\lcd_4_bit.c"
   529 ;; Parameters:    Size  Location     Type
   530 ;;		None
   531 ;; Auto vars:     Size  Location     Type
   532 ;;		None
   533 ;; Return value:  Size  Location     Type
   534 ;;		None               void
   535 ;; Registers used:
   536 ;;		wreg, status,2, status,0, pclath, cstack
   537 ;; Tracked objects:
   538 ;;		On entry : 0/0
   539 ;;		On exit  : 0/0
   540 ;;		Unchanged: 0/0
   541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   542 ;;      Params:         0       0       0       0       0
   543 ;;      Locals:         0       0       0       0       0
   544 ;;      Temps:          0       0       0       0       0
   545 ;;      Totals:         0       0       0       0       0
   546 ;;Total ram usage:        0 bytes
   547 ;; Hardware stack levels used:    1
   548 ;; Hardware stack levels required when called:    3
   549 ;; This function calls:
   550 ;;		_LCD_CmdWrite
   551 ;; This function is called by:
   552 ;;		_main
   553 ;; This function uses a non-reentrant model
   554 ;;
   555                           psect	text129
   556                           	file	"G:\work_space\Sample_Programs_updated\Pic\Pro_Pic _USB\Lcd\Lcd_4_bit\Lcd_Display\
                                 lcd_4_bit.c"
   557                           	line	133
   558                           	global	__size_of_LCD_GoToLineTwo
   559  0007                     	__size_of_LCD_GoToLineTwo	equ	__end_of_LCD_GoToLineTwo-_LCD_GoToLineTwo
   560                           	
   561  06DF                     _LCD_GoToLineTwo:	
   562                           	opt	stack 4
   563                           ; Regs used in _LCD_GoToLineTwo: [wreg+status,2+status,0+pclath+cstack]
   564                           	line	134
   565                           	
   566  06DF                     l4300:	
   567                           ;lcd_4_bit.c: 134: LCD_CmdWrite(0xc0);
   568  06DF  30C0               	movlw	(0C0h)
   569  06E0  120A  118A  2776   	fcall	_LCD_CmdWrite
              120A  118A         
   570                           	line	135
   571                           	
   572  06E5                     l1400:	
   573  06E5  0008               	return
   574                           	opt stack 0
   575                           GLOBAL	__end_of_LCD_GoToLineTwo
   576  06E6                     	__end_of_LCD_GoToLineTwo:
   577 ;; =============== function _LCD_GoToLineTwo ends ============
   578                           
   579                           	signat	_LCD_GoToLineTwo,88
   580                           	global	_LCD_Init
   581                           psect	text130,local,class=CODE,delta=2
   582                           global __ptext130
   583  074B                     __ptext130:
   584                           
   585 ;; *************** function _LCD_Init *****************
   586 ;; Defined at:
   587 ;;		line 74 in file "G:\work_space\Sample_Programs_updated\Pic\Pro_Pic _USB\Lcd\Lcd_4_bit\Lcd_Display\lcd_4_bit.c"
   588 ;; Parameters:    Size  Location     Type
   589 ;;		None
   590 ;; Auto vars:     Size  Location     Type
   591 ;;		None
   592 ;; Return value:  Size  Location     Type
   593 ;;		None               void
   594 ;; Registers used:
   595 ;;		wreg, status,2, status,0, pclath, cstack
   596 ;; Tracked objects:
   597 ;;		On entry : 0/0
   598 ;;		On exit  : 0/0
   599 ;;		Unchanged: 0/0
   600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   601 ;;      Params:         0       0       0       0       0
   602 ;;      Locals:         0       0       0       0       0
   603 ;;      Temps:          0       0       0       0       0
   604 ;;      Totals:         0       0       0       0       0
   605 ;;Total ram usage:        0 bytes
   606 ;; Hardware stack levels used:    1
   607 ;; Hardware stack levels required when called:    3
   608 ;; This function calls:
   609 ;;		_delay_us
   610 ;;		_LCD_CmdWrite
   611 ;; This function is called by:
   612 ;;		_main
   613 ;; This function uses a non-reentrant model
   614 ;;
   615                           psect	text130
   616                           	file	"G:\work_space\Sample_Programs_updated\Pic\Pro_Pic _USB\Lcd\Lcd_4_bit\Lcd_Display\
                                 lcd_4_bit.c"
   617                           	line	74
   618                           	global	__size_of_LCD_Init
   619  002B                     	__size_of_LCD_Init	equ	__end_of_LCD_Init-_LCD_Init
   620                           	
   621  074B                     _LCD_Init:	
   622                           	opt	stack 4
   623                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
   624                           	line	75
   625                           	
   626  074B                     l4286:	
   627                           ;lcd_4_bit.c: 75: delay_us(5000);
   628  074B  3088               	movlw	low(01388h)
   629  074C  00F0               	movwf	(?_delay_us)
   630  074D  3013               	movlw	high(01388h)
   631  074E  00F1               	movwf	((?_delay_us))+1
   632  074F  120A  118A  26E6   	fcall	_delay_us
              120A  118A         
   633                           	line	76
   634                           	
   635  0754                     l4288:	
   636                           ;lcd_4_bit.c: 76: TRISB=0x00;
   637  0754  1683               	bsf	status, 5	;RP0=1, select bank1
   638  0755  1303               	bcf	status, 6	;RP1=0, select bank1
   639  0756  0186               	clrf	(134)^080h	;volatile
   640                           	line	77
   641                           	
   642  0757                     l4290:	
   643                           ;lcd_4_bit.c: 77: LCD_CmdWrite(0x02);
   644  0757  3002               	movlw	(02h)
   645  0758  120A  118A  2776   	fcall	_LCD_CmdWrite
              120A  118A         
   646                           	line	78
   647                           	
   648  075D                     l4292:	
   649                           ;lcd_4_bit.c: 78: LCD_CmdWrite(0x28);
   650  075D  3028               	movlw	(028h)
   651  075E  120A  118A  2776   	fcall	_LCD_CmdWrite
              120A  118A         
   652                           	line	79
   653                           	
   654  0763                     l4294:	
   655                           ;lcd_4_bit.c: 79: LCD_CmdWrite(0x0E);
   656  0763  300E               	movlw	(0Eh)
   657  0764  120A  118A  2776   	fcall	_LCD_CmdWrite
              120A  118A         
   658                           	line	80
   659                           	
   660  0769                     l4296:	
   661                           ;lcd_4_bit.c: 80: LCD_CmdWrite(0x01);
   662  0769  3001               	movlw	(01h)
   663  076A  120A  118A  2776   	fcall	_LCD_CmdWrite
              120A  118A         
   664                           	line	81
   665                           	
   666  076F                     l4298:	
   667                           ;lcd_4_bit.c: 81: LCD_CmdWrite(0x80);
   668  076F  3080               	movlw	(080h)
   669  0770  120A  118A  2776   	fcall	_LCD_CmdWrite
              120A  118A         
   670                           	line	83
   671                           	
   672  0775                     l1391:	
   673  0775  0008               	return
   674                           	opt stack 0
   675                           GLOBAL	__end_of_LCD_Init
   676  0776                     	__end_of_LCD_Init:
   677 ;; =============== function _LCD_Init ends ============
   678                           
   679                           	signat	_LCD_Init,88
   680                           	global	_LCD_DataWrite
   681                           psect	text131,local,class=CODE,delta=2
   682                           global __ptext131
   683  07BB                     __ptext131:
   684                           
   685 ;; *************** function _LCD_DataWrite *****************
   686 ;; Defined at:
   687 ;;		line 243 in file "G:\work_space\Sample_Programs_updated\Pic\Pro_Pic _USB\Lcd\Lcd_4_bit\Lcd_Display\lcd_4_bit.c"
   688 ;; Parameters:    Size  Location     Type
   689 ;;  dat             1    wreg     unsigned char 
   690 ;; Auto vars:     Size  Location     Type
   691 ;;  dat             1    5[COMMON] unsigned char 
   692 ;; Return value:  Size  Location     Type
   693 ;;		None               void
   694 ;; Registers used:
   695 ;;		wreg, status,2, status,0, pclath, cstack
   696 ;; Tracked objects:
   697 ;;		On entry : 0/0
   698 ;;		On exit  : 0/0
   699 ;;		Unchanged: 0/0
   700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   701 ;;      Params:         0       0       0       0       0
   702 ;;      Locals:         1       0       0       0       0
   703 ;;      Temps:          1       0       0       0       0
   704 ;;      Totals:         2       0       0       0       0
   705 ;;Total ram usage:        2 bytes
   706 ;; Hardware stack levels used:    1
   707 ;; Hardware stack levels required when called:    2
   708 ;; This function calls:
   709 ;;		_delay_us
   710 ;;		_delay_ms
   711 ;; This function is called by:
   712 ;;		_LCD_DisplayString
   713 ;;		_LCD_DisplayNumber
   714 ;;		_LCD_ScrollMessage
   715 ;;		_LCD_DisplayRtcTime
   716 ;;		_LCD_DisplayRtcDate
   717 ;; This function uses a non-reentrant model
   718 ;;
   719                           psect	text131
   720                           	file	"G:\work_space\Sample_Programs_updated\Pic\Pro_Pic _USB\Lcd\Lcd_4_bit\Lcd_Display\
                                 lcd_4_bit.c"
   721                           	line	243
   722                           	global	__size_of_LCD_DataWrite
   723  0045                     	__size_of_LCD_DataWrite	equ	__end_of_LCD_DataWrite-_LCD_DataWrite
   724                           	
   725  07BB                     _LCD_DataWrite:	
   726                           	opt	stack 4
   727                           ; Regs used in _LCD_DataWrite: [wreg+status,2+status,0+pclath+cstack]
   728                           ;LCD_DataWrite@dat stored from wreg
   729                           	line	246
   730  07BB  00F5               	movwf	(LCD_DataWrite@dat)
   731                           	
   732  07BC                     l4258:	
   733                           ;lcd_4_bit.c: 246: PORTB=(dat & 0xf0);
   734  07BC  0875               	movf	(LCD_DataWrite@dat),w
   735  07BD  39F0               	andlw	0F0h
   736  07BE  1283               	bcf	status, 5	;RP0=0, select bank0
   737  07BF  1303               	bcf	status, 6	;RP1=0, select bank0
   738  07C0  0086               	movwf	(6)	;volatile
   739                           	line	247
   740                           	
   741  07C1                     l4260:	
   742                           ;lcd_4_bit.c: 247: RB1=1;
   743  07C1  1486               	bsf	(49/8),(49)&7
   744                           	line	248
   745                           	
   746  07C2                     l4262:	
   747                           ;lcd_4_bit.c: 248: RB2=0;
   748  07C2  1106               	bcf	(50/8),(50)&7
   749                           	line	249
   750                           	
   751  07C3                     l4264:	
   752                           ;lcd_4_bit.c: 249: RB3=1;
   753  07C3  1586               	bsf	(51/8),(51)&7
   754                           	line	250
   755                           	
   756  07C4                     l4266:	
   757                           ;lcd_4_bit.c: 250: delay_us(10);
   758  07C4  300A               	movlw	low(0Ah)
   759  07C5  00F0               	movwf	(?_delay_us)
   760  07C6  3000               	movlw	high(0Ah)
   761  07C7  00F1               	movwf	((?_delay_us))+1
   762  07C8  120A  118A  26E6   	fcall	_delay_us
              120A  118A         
   763                           	line	251
   764                           	
   765  07CD                     l4268:	
   766                           ;lcd_4_bit.c: 251: RB3=0;
   767  07CD  1283               	bcf	status, 5	;RP0=0, select bank0
   768  07CE  1303               	bcf	status, 6	;RP1=0, select bank0
   769  07CF  1186               	bcf	(51/8),(51)&7
   770                           	line	253
   771                           	
   772  07D0                     l4270:	
   773                           ;lcd_4_bit.c: 253: delay_us(10);
   774  07D0  300A               	movlw	low(0Ah)
   775  07D1  00F0               	movwf	(?_delay_us)
   776  07D2  3000               	movlw	high(0Ah)
   777  07D3  00F1               	movwf	((?_delay_us))+1
   778  07D4  120A  118A  26E6   	fcall	_delay_us
              120A  118A         
   779                           	line	255
   780                           	
   781  07D9                     l4272:	
   782                           ;lcd_4_bit.c: 255: PORTB=((dat <<4) & 0xf0);
   783  07D9  0875               	movf	(LCD_DataWrite@dat),w
   784  07DA  00F4               	movwf	(??_LCD_DataWrite+0)+0
   785  07DB  3003               	movlw	(04h)-1
   786  07DC                     u2405:
   787  07DC  1003               	clrc
   788  07DD  0DF4               	rlf	(??_LCD_DataWrite+0)+0,f
   789  07DE  3EFF               	addlw	-1
   790  07DF  1D03               	skipz
   791  07E0  2FDC               	goto	u2405
   792  07E1  1003               	clrc
   793  07E2  0D74               	rlf	(??_LCD_DataWrite+0)+0,w
   794  07E3  39F0               	andlw	0F0h
   795  07E4  1283               	bcf	status, 5	;RP0=0, select bank0
   796  07E5  1303               	bcf	status, 6	;RP1=0, select bank0
   797  07E6  0086               	movwf	(6)	;volatile
   798                           	line	256
   799                           	
   800  07E7                     l4274:	
   801                           ;lcd_4_bit.c: 256: RB1=1;
   802  07E7  1486               	bsf	(49/8),(49)&7
   803                           	line	257
   804                           	
   805  07E8                     l4276:	
   806                           ;lcd_4_bit.c: 257: RB2=0;
   807  07E8  1106               	bcf	(50/8),(50)&7
   808                           	line	258
   809                           	
   810  07E9                     l4278:	
   811                           ;lcd_4_bit.c: 258: RB3=1;
   812  07E9  1586               	bsf	(51/8),(51)&7
   813                           	line	259
   814                           	
   815  07EA                     l4280:	
   816                           ;lcd_4_bit.c: 259: delay_us(10);
   817  07EA  300A               	movlw	low(0Ah)
   818  07EB  00F0               	movwf	(?_delay_us)
   819  07EC  3000               	movlw	high(0Ah)
   820  07ED  00F1               	movwf	((?_delay_us))+1
   821  07EE  120A  118A  26E6   	fcall	_delay_us
              120A  118A         
   822                           	line	260
   823                           	
   824  07F3                     l4282:	
   825                           ;lcd_4_bit.c: 260: RB3=0;
   826  07F3  1283               	bcf	status, 5	;RP0=0, select bank0
   827  07F4  1303               	bcf	status, 6	;RP1=0, select bank0
   828  07F5  1186               	bcf	(51/8),(51)&7
   829                           	line	262
   830                           	
   831  07F6                     l4284:	
   832                           ;lcd_4_bit.c: 262: delay_ms(1);
   833  07F6  3001               	movlw	low(01h)
   834  07F7  00F2               	movwf	(?_delay_ms)
   835  07F8  3000               	movlw	high(01h)
   836  07F9  00F3               	movwf	((?_delay_ms))+1
   837  07FA  120A  118A  26F6   	fcall	_delay_ms
              120A  118A         
   838                           	line	264
   839                           	
   840  07FF                     l1411:	
   841  07FF  0008               	return
   842                           	opt stack 0
   843                           GLOBAL	__end_of_LCD_DataWrite
   844  0800                     	__end_of_LCD_DataWrite:
   845 ;; =============== function _LCD_DataWrite ends ============
   846                           
   847                           	signat	_LCD_DataWrite,4216
   848                           	global	_LCD_CmdWrite
   849                           psect	text132,local,class=CODE,delta=2
   850                           global __ptext132
   851  0776                     __ptext132:
   852                           
   853 ;; *************** function _LCD_CmdWrite *****************
   854 ;; Defined at:
   855 ;;		line 193 in file "G:\work_space\Sample_Programs_updated\Pic\Pro_Pic _USB\Lcd\Lcd_4_bit\Lcd_Display\lcd_4_bit.c"
   856 ;; Parameters:    Size  Location     Type
   857 ;;  cmd             1    wreg     unsigned char 
   858 ;; Auto vars:     Size  Location     Type
   859 ;;  cmd             1    5[COMMON] unsigned char 
   860 ;; Return value:  Size  Location     Type
   861 ;;		None               void
   862 ;; Registers used:
   863 ;;		wreg, status,2, status,0, pclath, cstack
   864 ;; Tracked objects:
   865 ;;		On entry : 0/0
   866 ;;		On exit  : 0/0
   867 ;;		Unchanged: 0/0
   868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   869 ;;      Params:         0       0       0       0       0
   870 ;;      Locals:         1       0       0       0       0
   871 ;;      Temps:          1       0       0       0       0
   872 ;;      Totals:         2       0       0       0       0
   873 ;;Total ram usage:        2 bytes
   874 ;; Hardware stack levels used:    1
   875 ;; Hardware stack levels required when called:    2
   876 ;; This function calls:
   877 ;;		_delay_us
   878 ;;		_delay_ms
   879 ;; This function is called by:
   880 ;;		_LCD_Init
   881 ;;		_LCD_GoToLineTwo
   882 ;;		_LCD_Clear
   883 ;;		_LCD_GoToLineOne
   884 ;;		_LCD_GoToXY
   885 ;;		_LCD_ScrollMessage
   886 ;; This function uses a non-reentrant model
   887 ;;
   888                           psect	text132
   889                           	file	"G:\work_space\Sample_Programs_updated\Pic\Pro_Pic _USB\Lcd\Lcd_4_bit\Lcd_Display\
                                 lcd_4_bit.c"
   890                           	line	193
   891                           	global	__size_of_LCD_CmdWrite
   892  0045                     	__size_of_LCD_CmdWrite	equ	__end_of_LCD_CmdWrite-_LCD_CmdWrite
   893                           	
   894  0776                     _LCD_CmdWrite:	
   895                           	opt	stack 4
   896                           ; Regs used in _LCD_CmdWrite: [wreg+status,2+status,0+pclath+cstack]
   897                           ;LCD_CmdWrite@cmd stored from wreg
   898                           	line	195
   899  0776  00F5               	movwf	(LCD_CmdWrite@cmd)
   900                           	
   901  0777                     l4230:	
   902                           ;lcd_4_bit.c: 195: PORTB=(cmd & 0xf0);
   903  0777  0875               	movf	(LCD_CmdWrite@cmd),w
   904  0778  39F0               	andlw	0F0h
   905  0779  1283               	bcf	status, 5	;RP0=0, select bank0
   906  077A  1303               	bcf	status, 6	;RP1=0, select bank0
   907  077B  0086               	movwf	(6)	;volatile
   908                           	line	196
   909                           	
   910  077C                     l4232:	
   911                           ;lcd_4_bit.c: 196: RB1=0;
   912  077C  1086               	bcf	(49/8),(49)&7
   913                           	line	197
   914                           	
   915  077D                     l4234:	
   916                           ;lcd_4_bit.c: 197: RB2=0;
   917  077D  1106               	bcf	(50/8),(50)&7
   918                           	line	198
   919                           	
   920  077E                     l4236:	
   921                           ;lcd_4_bit.c: 198: RB3=1;
   922  077E  1586               	bsf	(51/8),(51)&7
   923                           	line	199
   924                           	
   925  077F                     l4238:	
   926                           ;lcd_4_bit.c: 199: delay_us(10);
   927  077F  300A               	movlw	low(0Ah)
   928  0780  00F0               	movwf	(?_delay_us)
   929  0781  3000               	movlw	high(0Ah)
   930  0782  00F1               	movwf	((?_delay_us))+1
   931  0783  120A  118A  26E6   	fcall	_delay_us
              120A  118A         
   932                           	line	200
   933                           	
   934  0788                     l4240:	
   935                           ;lcd_4_bit.c: 200: RB3=0;
   936  0788  1283               	bcf	status, 5	;RP0=0, select bank0
   937  0789  1303               	bcf	status, 6	;RP1=0, select bank0
   938  078A  1186               	bcf	(51/8),(51)&7
   939                           	line	202
   940                           	
   941  078B                     l4242:	
   942                           ;lcd_4_bit.c: 202: delay_us(10);
   943  078B  300A               	movlw	low(0Ah)
   944  078C  00F0               	movwf	(?_delay_us)
   945  078D  3000               	movlw	high(0Ah)
   946  078E  00F1               	movwf	((?_delay_us))+1
   947  078F  120A  118A  26E6   	fcall	_delay_us
              120A  118A         
   948                           	line	204
   949                           	
   950  0794                     l4244:	
   951                           ;lcd_4_bit.c: 204: PORTB=((cmd<<4) & 0xf0);
   952  0794  0875               	movf	(LCD_CmdWrite@cmd),w
   953  0795  00F4               	movwf	(??_LCD_CmdWrite+0)+0
   954  0796  3003               	movlw	(04h)-1
   955  0797                     u2395:
   956  0797  1003               	clrc
   957  0798  0DF4               	rlf	(??_LCD_CmdWrite+0)+0,f
   958  0799  3EFF               	addlw	-1
   959  079A  1D03               	skipz
   960  079B  2F97               	goto	u2395
   961  079C  1003               	clrc
   962  079D  0D74               	rlf	(??_LCD_CmdWrite+0)+0,w
   963  079E  39F0               	andlw	0F0h
   964  079F  1283               	bcf	status, 5	;RP0=0, select bank0
   965  07A0  1303               	bcf	status, 6	;RP1=0, select bank0
   966  07A1  0086               	movwf	(6)	;volatile
   967                           	line	205
   968                           	
   969  07A2                     l4246:	
   970                           ;lcd_4_bit.c: 205: RB1=0;
   971  07A2  1086               	bcf	(49/8),(49)&7
   972                           	line	206
   973                           	
   974  07A3                     l4248:	
   975                           ;lcd_4_bit.c: 206: RB2=0;
   976  07A3  1106               	bcf	(50/8),(50)&7
   977                           	line	207
   978                           	
   979  07A4                     l4250:	
   980                           ;lcd_4_bit.c: 207: RB3=1;
   981  07A4  1586               	bsf	(51/8),(51)&7
   982                           	line	208
   983                           	
   984  07A5                     l4252:	
   985                           ;lcd_4_bit.c: 208: delay_us(10);
   986  07A5  300A               	movlw	low(0Ah)
   987  07A6  00F0               	movwf	(?_delay_us)
   988  07A7  3000               	movlw	high(0Ah)
   989  07A8  00F1               	movwf	((?_delay_us))+1
   990  07A9  120A  118A  26E6   	fcall	_delay_us
              120A  118A         
   991                           	line	209
   992                           	
   993  07AE                     l4254:	
   994                           ;lcd_4_bit.c: 209: RB3=0;
   995  07AE  1283               	bcf	status, 5	;RP0=0, select bank0
   996  07AF  1303               	bcf	status, 6	;RP1=0, select bank0
   997  07B0  1186               	bcf	(51/8),(51)&7
   998                           	line	211
   999                           	
  1000  07B1                     l4256:	
  1001                           ;lcd_4_bit.c: 211: delay_ms(1);
  1002  07B1  3001               	movlw	low(01h)
  1003  07B2  00F2               	movwf	(?_delay_ms)
  1004  07B3  3000               	movlw	high(01h)
  1005  07B4  00F3               	movwf	((?_delay_ms))+1
  1006  07B5  120A  118A  26F6   	fcall	_delay_ms
              120A  118A         
  1007                           	line	212
  1008                           	
  1009  07BA                     l1408:	
  1010  07BA  0008               	return
  1011                           	opt stack 0
  1012                           GLOBAL	__end_of_LCD_CmdWrite
  1013  07BB                     	__end_of_LCD_CmdWrite:
  1014 ;; =============== function _LCD_CmdWrite ends ============
  1015                           
  1016                           	signat	_LCD_CmdWrite,4216
  1017                           	global	_delay_ms
  1018                           psect	text133,local,class=CODE,delta=2
  1019                           global __ptext133
  1020  06F6                     __ptext133:
  1021                           
  1022 ;; *************** function _delay_ms *****************
  1023 ;; Defined at:
  1024 ;;		line 47 in file "G:\work_space\Sample_Programs_updated\Pic\Pro_Pic _USB\Lcd\Lcd_4_bit\Lcd_Display\delay.c"
  1025 ;; Parameters:    Size  Location     Type
  1026 ;;  ms_count        2    2[COMMON] unsigned int 
  1027 ;; Auto vars:     Size  Location     Type
  1028 ;;		None
  1029 ;; Return value:  Size  Location     Type
  1030 ;;		None               void
  1031 ;; Registers used:
  1032 ;;		wreg, status,2, status,0, pclath, cstack
  1033 ;; Tracked objects:
  1034 ;;		On entry : 0/0
  1035 ;;		On exit  : 0/0
  1036 ;;		Unchanged: 0/0
  1037 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1038 ;;      Params:         2       0       0       0       0
  1039 ;;      Locals:         0       0       0       0       0
  1040 ;;      Temps:          0       0       0       0       0
  1041 ;;      Totals:         2       0       0       0       0
  1042 ;;Total ram usage:        2 bytes
  1043 ;; Hardware stack levels used:    1
  1044 ;; Hardware stack levels required when called:    1
  1045 ;; This function calls:
  1046 ;;		_delay_us
  1047 ;; This function is called by:
  1048 ;;		_LCD_CmdWrite
  1049 ;;		_LCD_DataWrite
  1050 ;;		_delay_sec
  1051 ;;		_LCD_ScrollMessage
  1052 ;; This function uses a non-reentrant model
  1053 ;;
  1054                           psect	text133
  1055                           	file	"G:\work_space\Sample_Programs_updated\Pic\Pro_Pic _USB\Lcd\Lcd_4_bit\Lcd_Display\
                                 delay.c"
  1056                           	line	47
  1057                           	global	__size_of_delay_ms
  1058  0019                     	__size_of_delay_ms	equ	__end_of_delay_ms-_delay_ms
  1059                           	
  1060  06F6                     _delay_ms:	
  1061                           	opt	stack 4
  1062                           ; Regs used in _delay_ms: [wreg+status,2+status,0+pclath+cstack]
  1063                           	line	48
  1064                           	
  1065  06F6                     l4222:	
  1066                           ;delay.c: 48: while(ms_count!=0)
  1067  06F6  2F07               	goto	l4228
  1068                           	
  1069  06F7                     l692:	
  1070                           	line	50
  1071                           	
  1072  06F7                     l4224:	
  1073                           ;delay.c: 49: {
  1074                           ;delay.c: 50: delay_us(300);
  1075  06F7  302C               	movlw	low(012Ch)
  1076  06F8  00F0               	movwf	(?_delay_us)
  1077  06F9  3001               	movlw	high(012Ch)
  1078  06FA  00F1               	movwf	((?_delay_us))+1
  1079  06FB  120A  118A  26E6   	fcall	_delay_us
              120A  118A         
  1080                           	line	51
  1081                           	
  1082  0700                     l4226:	
  1083                           ;delay.c: 51: ms_count--;
  1084  0700  3001               	movlw	low(01h)
  1085  0701  02F2               	subwf	(delay_ms@ms_count),f
  1086  0702  3000               	movlw	high(01h)
  1087  0703  1C03               	skipc
  1088  0704  03F3               	decf	(delay_ms@ms_count+1),f
  1089  0705  02F3               	subwf	(delay_ms@ms_count+1),f
  1090  0706  2F07               	goto	l4228
  1091                           	line	52
  1092                           	
  1093  0707                     l691:	
  1094                           	line	48
  1095                           	
  1096  0707                     l4228:	
  1097  0707  0873               	movf	((delay_ms@ms_count+1)),w
  1098  0708  0472               	iorwf	((delay_ms@ms_count)),w
  1099  0709  1D03               	skipz
  1100  070A  2F0C               	goto	u2381
  1101  070B  2F0D               	goto	u2380
  1102  070C                     u2381:
  1103  070C  2EF7               	goto	l4224
  1104  070D                     u2380:
  1105  070D  2F0E               	goto	l694
  1106                           	
  1107  070E                     l693:	
  1108                           	line	54
  1109                           	
  1110  070E                     l694:	
  1111  070E  0008               	return
  1112                           	opt stack 0
  1113                           GLOBAL	__end_of_delay_ms
  1114  070F                     	__end_of_delay_ms:
  1115 ;; =============== function _delay_ms ends ============
  1116                           
  1117                           	signat	_delay_ms,4216
  1118                           	global	_delay_us
  1119                           psect	text134,local,class=CODE,delta=2
  1120                           global __ptext134
  1121  06E6                     __ptext134:
  1122                           
  1123 ;; *************** function _delay_us *****************
  1124 ;; Defined at:
  1125 ;;		line 26 in file "G:\work_space\Sample_Programs_updated\Pic\Pro_Pic _USB\Lcd\Lcd_4_bit\Lcd_Display\delay.c"
  1126 ;; Parameters:    Size  Location     Type
  1127 ;;  us_count        2    0[COMMON] unsigned int 
  1128 ;; Auto vars:     Size  Location     Type
  1129 ;;		None
  1130 ;; Return value:  Size  Location     Type
  1131 ;;		None               void
  1132 ;; Registers used:
  1133 ;;		wreg, status,2, status,0
  1134 ;; Tracked objects:
  1135 ;;		On entry : 0/0
  1136 ;;		On exit  : 0/0
  1137 ;;		Unchanged: 0/0
  1138 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1139 ;;      Params:         2       0       0       0       0
  1140 ;;      Locals:         0       0       0       0       0
  1141 ;;      Temps:          0       0       0       0       0
  1142 ;;      Totals:         2       0       0       0       0
  1143 ;;Total ram usage:        2 bytes
  1144 ;; Hardware stack levels used:    1
  1145 ;; This function calls:
  1146 ;;		Nothing
  1147 ;; This function is called by:
  1148 ;;		_delay_ms
  1149 ;;		_LCD_Init
  1150 ;;		_LCD_CmdWrite
  1151 ;;		_LCD_DataWrite
  1152 ;; This function uses a non-reentrant model
  1153 ;;
  1154                           psect	text134
  1155                           	file	"G:\work_space\Sample_Programs_updated\Pic\Pro_Pic _USB\Lcd\Lcd_4_bit\Lcd_Display\
                                 delay.c"
  1156                           	line	26
  1157                           	global	__size_of_delay_us
  1158  0010                     	__size_of_delay_us	equ	__end_of_delay_us-_delay_us
  1159                           	
  1160  06E6                     _delay_us:	
  1161                           	opt	stack 4
  1162                           ; Regs used in _delay_us: [wreg+status,2+status,0]
  1163                           	line	27
  1164                           	
  1165  06E6                     l3292:	
  1166                           ;delay.c: 27: while(us_count!=0)
  1167  06E6  2EEE               	goto	l3296
  1168                           	
  1169  06E7                     l686:	
  1170                           	line	29
  1171                           	
  1172  06E7                     l3294:	
  1173                           ;delay.c: 28: {
  1174                           ;delay.c: 29: us_count--;
  1175  06E7  3001               	movlw	low(01h)
  1176  06E8  02F0               	subwf	(delay_us@us_count),f
  1177  06E9  3000               	movlw	high(01h)
  1178  06EA  1C03               	skipc
  1179  06EB  03F1               	decf	(delay_us@us_count+1),f
  1180  06EC  02F1               	subwf	(delay_us@us_count+1),f
  1181  06ED  2EEE               	goto	l3296
  1182                           	line	30
  1183                           	
  1184  06EE                     l685:	
  1185                           	line	27
  1186                           	
  1187  06EE                     l3296:	
  1188  06EE  0871               	movf	((delay_us@us_count+1)),w
  1189  06EF  0470               	iorwf	((delay_us@us_count)),w
  1190  06F0  1D03               	skipz
  1191  06F1  2EF3               	goto	u11
  1192  06F2  2EF4               	goto	u10
  1193  06F3                     u11:
  1194  06F3  2EE7               	goto	l3294
  1195  06F4                     u10:
  1196  06F4  2EF5               	goto	l688
  1197                           	
  1198  06F5                     l687:	
  1199                           	line	31
  1200                           	
  1201  06F5                     l688:	
  1202  06F5  0008               	return
  1203                           	opt stack 0
  1204                           GLOBAL	__end_of_delay_us
  1205  06F6                     	__end_of_delay_us:
  1206 ;; =============== function _delay_us ends ============
  1207                           
  1208                           	signat	_delay_us,4216
  1209                           psect	text135,local,class=CODE,delta=2
  1210                           global __ptext135
  1211  0000                     __ptext135:
  1212                           	global	btemp
  1213  007E                     	btemp set 07Eh
  1214                           
  1215                           	DABS	1,126,2	;btemp
  1216                           	global	wtemp0
  1217  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Wed Jun 04 12:00:27 2014

                          pc 0002                ?_LCD_CmdWrite 0070                           _RD 0C60  
                         u10 06F4                           u11 06F3                           _WR 0C61  
                         fsr 0004               ?_LCD_DataWrite 0070                          l691 0707  
                        l692 06F7                          l685 06EE                          l693 070E  
                        l686 06E7                          l694 070E                          l687 06F5  
                        l688 06F5                          _GIE 005F                          _RB1 0031  
                        _RB2 0032                          _RB3 0033                          fsr0 0004  
                       l1400 06E5                         l2130 0726                         l1411 07FF  
                       l2131 0726                         l2132 0727                         l2133 0727  
                       l1414 073D                         l1415 072C                         l1408 07BA  
                       l1416 074A                         l1417 074A                         l1391 0775  
                       l4300 06DF                         l4222 06F6                         l4230 0777  
                       l4302 072B                         l4310 070F                         l4224 06F7  
                       l4240 0788                         l4232 077C                         l4304 072C  
                       l4312 0714                         l4226 0700                         l4250 07A4  
                       l4242 078B                         l4234 077D                         l4306 0738  
                       l4314 071A                         l3292 06E6                         l4228 0707  
                       l4252 07A5                         l4244 0794                         l4236 077E  
                       l4260 07C1                         l4308 073D                         l3294 06E7  
                       l4254 07AE                         l4246 07A2                         l4238 077F  
                       l4270 07D0                         l4262 07C2                         l3296 06EE  
                       l4256 07B1                         l4248 07A3                         l4280 07EA  
                       l4272 07D9                         l4264 07C3                         l4282 07F3  
                       l4274 07E7                         l4266 07C4                         l4258 07BC  
                       l4290 0757                         l4284 07F6                         l4276 07E8  
                       l4268 07CD                         l4292 075D                         l4278 07E9  
                       l4294 0763                         l4286 074B                         l4296 0769  
                       l4288 0754                         l4298 076F                         STR_1 001A  
                       STR_2 0009                         u2410 0749                         u2411 0748  
                       u2405 07DC                         u2380 070D                         u2381 070C  
                       u2395 0797                         _WREN 0C62                         _main 070F  
                       btemp 007E                         start 0000               ??_LCD_CmdWrite 0074  
           __end_of_LCD_Init 0776                        ?_main 0070                        _EEADR 010D  
                      _CARRY 0018                        _PORTB 0006                        _TRISB 0086  
           ?_LCD_GoToLineTwo 0070                        pclath 000A                        status 0003  
                      wtemp0 007E                 __end_of_main 072A              ??_LCD_DataWrite 0074  
                     ??_main 0078                       _EEDATA 010C                       _EECON1 018C  
                     _EECON2 018D             __end_of_delay_ms 070F             __end_of_delay_us 06F6  
       __end_of_LCD_CmdWrite 07BB                    ?_LCD_Init 0070               __pcstackCOMMON 0070  
                 ??_LCD_Init 0076                   __pmaintext 070F                    ?_delay_ms 0072  
                  ?_delay_us 0070             delay_ms@ms_count 0072             LCD_DataWrite@dat 0075  
      __size_of_LCD_CmdWrite 0045                   ??_delay_ms 0074                   ??_delay_us 0072  
       end_of_initialization 06DB     __size_of_LCD_GoToLineTwo 0007                 _LCD_CmdWrite 0776  
      __end_of_LCD_DataWrite 0800            __size_of_LCD_Init 002B             delay_us@us_count 0070  
        start_initialization 06DB            ??_LCD_GoToLineTwo 0076            __size_of_delay_ms 0019  
          __size_of_delay_us 0010                    __ptext130 074B                    __ptext131 07BB  
                  __ptext132 0776                    __ptext133 06F6                    __ptext134 06E6  
                  __ptext135 0000                    __ptext127 0000                    __ptext128 072A  
                  __ptext129 06DF  LCD_DisplayString@string_ptr 0077                    __pstrings 0003  
          _LCD_DisplayString 072A           ?_LCD_DisplayString 0070                     _LCD_Init 074B  
        ??_LCD_DisplayString 0076              LCD_CmdWrite@cmd 0075                  __stringbase 0008  
  __end_of_LCD_DisplayString 074B                     _delay_ms 06F6                     _delay_us 06E6  
              __size_of_main 001B       __size_of_LCD_DataWrite 0045              _LCD_GoToLineTwo 06DF  
 __size_of_LCD_DisplayString 0021                    stringcode 0003                _LCD_DataWrite 07BB  
                   stringdir 0003                     stringtab 0003      __end_of_LCD_GoToLineTwo 06E6  
